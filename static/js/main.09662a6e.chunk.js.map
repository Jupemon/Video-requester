{"version":3,"sources":["Components/LoginScreen/LoginButton.js","Components/LoginScreen/LoginScreen.js","Components/Profile/Price.js","Components/Profile/SetupProfile.js","Components/Profile/Profile.js","Components/VideoRequests/CreateVideoRequest.js","Components/VideoRequests/Request/YoutubePlayer.js","Components/VideoRequests/Request/HandleRequest/DropZone/DropZone.js","Components/VideoRequests/Request/HandleRequest/HandleRequest.js","Components/VideoRequests/Request/Request.js","Components/VideoRequests/RequestsInfo.js","Components/VideoRequests/VideoRequests.js","Views/ManageProfile.js","Views/NotFound.js","Views/ViewProfile.js","App.js","index.js"],"names":["LoginButton","props","disabled","isLoading","clientId","process","buttonText","onSuccess","googleUser","logIn","onFailure","er","logInFailure","cookiePolicy","LoginScreen","state","errorMessage","data","fetchData","a","setState","token_id","tokenId","fetch","method","headers","body","JSON","stringify","response","status","json","parsedData","window","localStorage","setItem","loadProfile","console","log","this","REACT_APP_SECRET_NAME","className","Container","Jumbotron","style","fontSize","color","Row","Col","marginBottom","Component","Price","editPrice","video_price","currency","loading","handleClick","inputPrice","user_id","getItem","updatedPrice","Number","parseInt","DropdownButton","title","id","display","InputGroup","FormControl","type","min","onChange","e","target","value","aria-label","aria-describedby","Prepend","Text","toUpperCase","Dropdown","Item","onClick","eventKey","SetupProfile","onboarding_completed","google_consent","Button","href","variant","Profile","profile","channel_name","CreateVideoRequest","infoMessage","requester","description","sendVideoRequest","clearInput","updatedData","updateVideoRequests","checkoutSessionId","Stripe","redirectToCheckout","sessionId","validateInput","length","userId","requestBody","videoPrice","Append","placeholder","maxLength","height","Spinner","animation","role","YoutubePlayer","loadPlayer","videoId","requestId","player","YT","Player","width","events","onPlayerReady","DropZone","error","validateFile","file","indexOf","dragOver","preventDefault","dragEnter","dragLeave","fileError","fileDrop","handleFileUpload","dataTransfer","files","onDragOver","onDragEnter","onDragLeave","onDrop","HandleRequest","rejectRequest","updateRequestStatus","handleReject","fulfillRequest","input","placeHolder","FormData","append","Request","video","request_id","viewOnly","Card","bg","Body","Title","RequestsInfo","pending","fulfilled","rejected","uploading","failed","total","VideoRequests","youtubeLoaded","requests","loadYoutubeScripts","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","profileData","undefined","map","vr","key","ManageProfile","updateProfileData","NotFound","ViewProfile","getUserId","location","split","fetchProfile","App","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.09662a6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\n\r\nconst LoginButton = (props) => { // handles the google login \r\n    return (<GoogleLogin\r\n        disabled={props.isLoading}\r\n        clientId={process.env.REACT_APP_CLIENT_ID}\r\n        buttonText={props.isLoading ? \"Loading...\" : \"Login\"}\r\n        onSuccess={(googleUser) => {props.logIn(googleUser)}}\r\n        onFailure={(er) => {props.logInFailure(er)}}\r\n        cookiePolicy={'single_host_origin'}\r\n      />)\r\n}\r\n \r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport LoginButton from './LoginButton';\r\n//import ManageProfile from '../ManageProfile/ManageProfile';\r\nimport './LoginScreen.css'\r\nimport { Row, Col, Jumbotron, Container } from 'react-bootstrap';\r\n//import Profile from '../ManageProfile/Profile';\r\n\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  state = { \r\n      isLoading : false,\r\n      errorMessage : \"\",\r\n      data : false // user data gotten from server\r\n    }\r\n\r\n\r\n    fetchData = async ( googleUser )=> { // Send google token_id to be verified on server\r\n\r\n      this.setState({isLoading : true})\r\n\r\n\r\n      const token_id = googleUser.tokenId;\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/signin`, {\r\n        method : \"POST\",\r\n        headers : {\r\n          'Content-Type' : \"application/json\"\r\n\r\n        },\r\n        body : JSON.stringify({\r\n          token_id : token_id\r\n        })\r\n      })\r\n  \r\n      if (response.status === 200 || response.status === 201) {\r\n\r\n        const parsedData = await response.json()\r\n\r\n        window.localStorage.setItem('token_id', token_id) // Used to verify user on some http requests\r\n\r\n        this.props.loadProfile(parsedData)\r\n  \r\n      }\r\n  \r\n      else {\r\n        \r\n        this.setState({errorMessage : \"Couldn't sign in\"})\r\n  \r\n      }\r\n    }\r\n\r\n    logInFailure = (er) => {\r\n      console.log(er, \"ERROR\")\r\n    }\r\n    \r\n    render() {\r\n\r\n      const {errorMessage, isLoading, data} = this.state\r\n      console.log(process.env.REACT_APP_SECRET_NAME, \"TESTING ENV VARIABLE\")\r\n      if (!data) {\r\n        return ( \r\n          <div className=\"Content\">\r\n            <Container>\r\n              <Jumbotron>\r\n                <h1 style={{fontSize:\"85px\"}} className=\"display-4\">Requestnium</h1>\r\n                <p className=\"lead\">Allows youtubers to get video requests and sell custom video content</p>\r\n                <hr className=\"my-4\" />\r\n                <LoginButton isLoading={isLoading} logInFailure={this.logInFailure} logIn={this.fetchData}/>\r\n                <p style={{color:\"red\"}}>{errorMessage}</p>\r\n              </Jumbotron>\r\n\r\n              <Row>\r\n                <Col >\r\n                  <div className=\"box-1\">\r\n                    <i style={{marginBottom : \"25px\"}} className=\"fas fa-user-plus fa-4x\"></i>\r\n                    <h1 className=\"display-4\">1. Sign in</h1>\r\n                    <p className=\"lead\">Setup your account by signing in with your youtube/google account</p>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col>\r\n                <div className=\"box-2\">\r\n                    <i style={{marginBottom : \"25px\"}} className=\"fas fa-upload fa-4x\"></i>\r\n                    <h1 className=\"display-4\">2. Setup your account</h1>\r\n                    <p className=\"lead\">Setup your account and start accepting custom video requests</p>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col >\r\n                <div className=\"box-3\">\r\n                    <i style={{marginBottom : \"25px\"}} className=\"fas fa-dollar-sign fa-4x\"></i>\r\n                    <h1 className=\"display-4\">3. Gain revenue</h1>\r\n                    <p className=\"lead\">Fullfill custom video requests and gain revenue</p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Container>\r\n          </div>\r\n        );\r\n      }\r\n        else if (data) {\r\n            return (<div>\r\n                \r\n            </div>)\r\n        }\r\n    }\r\n}\r\n \r\n \r\nexport default LoginScreen;","import React, { Component } from 'react';\r\nimport { Button, Dropdown, DropdownButton, Form, FormControl, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nclass Price extends Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        const {video_price, currency} = this.props\r\n\r\n        this.state = {\r\n            inputPrice : video_price,\r\n            loading : false,\r\n            video_price : video_price,\r\n            currency : currency\r\n        }\r\n    }\r\n    \r\n    editPrice = async (body) => {\r\n\r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/editprice`, {\r\n            method : \"POST\",\r\n            headers : {\r\n              'Content-Type' : \"application/json\"\r\n    \r\n            },\r\n            body : JSON.stringify(body)\r\n        })\r\n\r\n        if (response.status === 201) {\r\n\r\n            const data = await response.json()\r\n\r\n            const {video_price, currency} = data\r\n\r\n            this.setState({video_price, currency})\r\n        }\r\n\r\n        this.setState({loading : false})\r\n    }\r\n\r\n    handleClick = () => {\r\n\r\n        this.setState({loading : true})\r\n\r\n        const { inputPrice } = this.state\r\n\r\n        const { user_id } = this.props\r\n\r\n        const token_id = window.localStorage.getItem('token_id')\r\n\r\n        const body = {\r\n            token_id : token_id,\r\n            updatedPrice : Number.parseInt(this.state.inputPrice),\r\n            user_id : user_id\r\n        }\r\n\r\n        this.editPrice(body)\r\n        \r\n    }\r\n    \r\n    render() { \r\n\r\n        const {inputPrice, video_price, currency, loading} = this.state\r\n\r\n        return ( \r\n        <div>\r\n            <p>\r\n                the price for leaving a custom video request is currently : <b>{video_price}{\" \"}{currency}</b>\r\n            </p>\r\n            <DropdownButton disabled={loading}  title={loading ? \"Loading..\" : \"Edit Price\"} id=\"bg-nested-dropdown\">\r\n                <div style={{display : \"flex\"}}>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={(e) => {this.setState({ inputPrice : e.target.value })}}\r\n                        value={inputPrice}\r\n                        aria-label=\"Default\"\r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                        />\r\n                    <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\">{currency.toUpperCase()}</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    </InputGroup>\r\n\r\n                    <Dropdown.Item onClick={() => {this.handleClick()}} eventKey=\"1\">Save</Dropdown.Item>\r\n                </div>\r\n            </DropdownButton>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Price;","import React, { Component } from 'react';\r\nimport { Button, Jumbotron } from 'react-bootstrap';\r\nimport './SetupProfile.css';\r\n\r\nclass SetupProfile extends Component { // Force user to setup their profile (Stripe onboarding & Google consent) before managing it\r\n    state = {  }\r\n\r\n\r\n    render() { \r\n        const { onboarding_completed, google_consent, token_id } = this.props\r\n\r\n\r\n        if (!onboarding_completed) {\r\n            return (<div className=\"setup-profile\">\r\n                <Jumbotron>\r\n                <h1>Integrade stripe</h1>\r\n                <p>\r\n                    Follow the instructions given here to create a stripe onboarding account, this will allow you to collect payments from you viewers\r\n                </p>\r\n                <p>\r\n                    <Button  href={`${process.env.REACT_APP_SERVER_URL}/handle-onboarding/${token_id}`}variant=\"primary\">Integrade stripe</Button>\r\n                </p>\r\n                </Jumbotron>\r\n    \r\n    \r\n            </div> );\r\n        }\r\n\r\n        else if (!google_consent) {\r\n            return (<div className=\"setup-profile\">\r\n                <Jumbotron>\r\n                <h1>Google consent</h1>\r\n                <p>\r\n                    Click The button to give consent to the application access to your youtube account.\r\n                </p>\r\n                <p>\r\n                    <Button href={`${process.env.REACT_APP_SERVER_URL}/handle-consent/${token_id}`} variant=\"primary\">Google Consent</Button>\r\n                </p>\r\n                </Jumbotron>\r\n    \r\n    \r\n            </div> );\r\n        }\r\n       else {\r\n           return null\r\n       }\r\n    }\r\n}\r\n \r\nexport default SetupProfile;","import React, { Component } from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport Price from './Price';\r\nimport SetupProfile from './SetupProfile';\r\n\r\n\r\nclass Profile extends Component {\r\n    state = {  }\r\n    render() {\r\n        \r\n        const {channel_name, user_id, onboarding_completed, google_consent, video_price, currency} = this.props.profile\r\n        const token_id = window.localStorage.getItem(\"token_id\")\r\n        console.log(\"PROOOOOOPS\", this.props.profile)\r\n        if (!onboarding_completed || !google_consent) {\r\n            return (\r\n                <SetupProfile onboarding_completed={onboarding_completed} google_consent={google_consent} token_id={token_id}/>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                    <Jumbotron>\r\n                        <h1>Hello, {channel_name}</h1>\r\n                        <hr/>\r\n                        <p>\r\n                            People can now request custom youtube videos from you using this shareable link : <a href={`http://localhost:3000/viewprofile/${user_id}`}>{`http://localhost:3000/viewprofile/${user_id}`}</a>\r\n                        </p>\r\n                        <Price video_price={video_price} user_id={user_id} currency={currency}/>\r\n                    </Jumbotron>\r\n                );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { Jumbotron, Row, Col, Button, InputGroup, Spinner } from 'react-bootstrap';\r\n\r\nclass CreateVideoRequest extends Component {\r\n\r\n    state = { \r\n        infoMessage : \"\",\r\n        loading : false,\r\n\r\n        requester : \"\",\r\n        title : \"\",\r\n        description : \"\"\r\n        \r\n    }\r\n\r\n    sendVideoRequest = async (body) => { // Sends and creates a videorequest on the DB\r\n\r\n        try {\r\n            \r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/handle-checkout`, {\r\n                method : \"POST\",\r\n                headers : {\r\n                  'Content-Type' : \"application/json\"\r\n                },\r\n                body : JSON.stringify(body)\r\n            })\r\n    \r\n            this.clearInput()\r\n            let checkoutSessionId\r\n\r\n            if (response.status === 201) { // New videorequest was created\r\n                \r\n                const updatedData = await response.json()\r\n\r\n                this.setState({loading : false, infoMessage : \"New videorequest added\"})\r\n                \r\n                this.props.updateVideoRequests(updatedData)\r\n\r\n                \r\n\r\n            }\r\n\r\n            else if (response.status === 200) { // Send user to payment screen\r\n                checkoutSessionId = await response.json()\r\n    \r\n                const stripe = window.Stripe(process.env.REACT_APP_PUBLIC_KEY)\r\n        \r\n                stripe.redirectToCheckout({\r\n    \r\n                    // Make the id field from the Checkout Session creation API response\r\n                    // available to this file, so you can provide it as argument here\r\n                    // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\r\n                    sessionId: checkoutSessionId\r\n                  })\r\n                  // If `redirectToCheckout` fails due to a browser or network\r\n                  // error, display the localized error message to your customer\r\n                  // using `error.message`.\r\n            }\r\n\r\n\r\n            else {\r\n                throw \"Fetch failed\"\r\n            }\r\n\r\n\r\n        }\r\n\r\n        catch (er){\r\n            console.log(er, \"ERROR HERE\")\r\n            this.setState({loading : false, infoMessage : \"Something went wrong\"})\r\n        }\r\n      \r\n    }\r\n\r\n    clearInput = () => { // Clear user input\r\n        this.setState({\r\n            requester : \"\",\r\n            title : \"\",\r\n            description : \"\"\r\n        })\r\n    }\r\n\r\n    validateInput = () => { // Validate user input, returns boolean\r\n\r\n        const { title, description } = this.state\r\n\r\n        if (title.length > 0 && description.length > 0) {\r\n\r\n            return true\r\n        }\r\n\r\n\r\n        else {\r\n\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n\r\n        const { userId } = this.props\r\n\r\n        const { title, description, requester } = this.state\r\n\r\n        const validInput = this.validateInput()\r\n\r\n        if (validInput) {\r\n\r\n            const requestBody = {\r\n                requester : requester,\r\n                title : title,\r\n                description : description,\r\n                user_id : Number.parseInt(userId),\r\n            }\r\n\r\n            this.setState({loading : true})\r\n\r\n            this.sendVideoRequest(requestBody)\r\n        }\r\n\r\n        else {\r\n\r\n            this.setState({infoMessage : \"Invalid input\"})\r\n        }\r\n        \r\n    }\r\n    \r\n    render() { \r\n        const { videoPrice, currency, channel_name } = this.props\r\n        const { loading, title, description, requester, infoMessage } = this.state\r\n\r\n        return(\r\n            <Jumbotron>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>Request a custom video :</h1>\r\n                        <p>You can support <b>{channel_name}</b> by requesting a custom youtube video from him for <b>{videoPrice} {currency}</b></p>\r\n                    </Col>\r\n        \r\n                    <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text id=\"basic-addon2\">Requester</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                        <input \r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name/username\"\r\n                        disabled={loading}\r\n                        onChange={(e) => {this.setState({requester : e.target.value})}}\r\n                        value={requester}\r\n                        maxLength=\"25\"\r\n                        />\r\n                    </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n\r\n                            <InputGroup.Append>\r\n                                <InputGroup.Text id=\"basic-addon2\">Title</InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                            <input \r\n                            type=\"text\"\r\n                            placeholder=\"Title for your request\"\r\n                            disabled={loading}\r\n                            onChange={(e) => {this.setState({title : e.target.value})}}\r\n                            value={title}\r\n                            maxLength=\"25\"\r\n                            />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>Description</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <textarea \r\n                            style={{height:\"300px\"}}\r\n                            placeholder=\"Describe the custom video you would like..\"\r\n                            type=\"textarea\"\r\n                            disabled={loading}\r\n                            onChange={(e) => {this.setState({description : e.target.value})}}\r\n                            value={description}\r\n                            maxLength=\"250\"\r\n                            />\r\n                        </InputGroup>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            \r\n                            <Button onClick={() => {this.handleClick()}} disabled={loading} variant=\"outline-secondary\">\r\n                            {loading ? \r\n                            <Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\r\n                            \"Request\"\r\n                            }\r\n                            </Button>\r\n                            <p>{infoMessage}</p>\r\n                            </InputGroup.Prepend>\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Jumbotron>\r\n        ) \r\n\r\n    }\r\n}\r\n \r\nexport default CreateVideoRequest;","import React, { Component } from 'react';\r\n\r\n\r\nclass YoutubePlayer extends Component {\r\n    state = { \r\n\r\n     }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadPlayer()\r\n    }\r\n\r\n    player // Youtube Player here\r\n\r\n    loadPlayer = () => { // Called after required youtube scripts have been loaded\r\n        \r\n        this.setState({loading : false})\r\n\r\n        const { videoId, requestId } = this.props\r\n        \r\n        this.player = new window.YT.Player(`youtube-player-${requestId}`, {\r\n            height: '390',\r\n            width: '390',\r\n            videoId: videoId,\r\n            events: {\r\n                'onReady': this.onPlayerReady,\r\n            }\r\n          });\r\n    }\r\n\r\n    render() {\r\n\r\n            return (<div>\r\n                <div id={`youtube-player-${this.props.requestId}`}/>\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n \r\nexport default YoutubePlayer;","import React, { Component } from 'react';\r\nimport './DropZone.css';\r\n\r\n\r\nclass DropZone extends Component {\r\n    state = {\r\n        error : false,\r\n\r\n    }\r\n\r\n    validateFile = (file) => { \r\n        const validTypes = ['VIDEO/MOV', 'VIDEO/MPEG4', 'VIDEO/MP4', 'VIDEO/AVI', 'VIDEO/WMV', 'VIDEO/MPEGPS', 'VIDEO/FLV']; // Covers the most popular types of video files\r\n        if (validTypes.indexOf(file.type.toUpperCase()) === -1) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        \r\n    }\r\n\r\n    dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    \r\n    dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    \r\n    dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    fileError = () => {\r\n        console.log(\"FAILED UPLOAD\")\r\n        this.setState({error : \"Not valid file\"})\r\n    }\r\n    \r\n    fileDrop = (e) => {\r\n        const { handleFileUpload } = this.props\r\n\r\n        e.preventDefault();\r\n\r\n        const file = e.dataTransfer.files[0];\r\n\r\n        console.log(file);\r\n\r\n        this.validateFile(file) ? handleFileUpload(file) : this.fileError()\r\n    }\r\n\r\n    \r\n\r\n    render() { \r\n        const { error } = this.state\r\n        return (\r\n        <div className=\"dropzone-container\">\r\n            <div className=\"dropzone-drop-container\" onDragOver={this.dragOver} onDragEnter={this.dragEnter} onDragLeave={this.dragLeave} onDrop={this.fileDrop} >\r\n                <div className=\"dropzone-drop-message\">\r\n                    <div className=\"dropzone-upload-icon\"></div>\r\n                    {error ? error : \"Drag & Drop video file here\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default DropZone;","import React, { Component } from 'react';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport DropZone from './DropZone/DropZone';\r\nimport './HandleRequest.css'\r\n\r\nclass HandleRequest extends Component { // Allows fulfilling / rejecting a request, only available for manageprofile\r\n    state = {\r\n        loading : false\r\n    }\r\n\r\n    rejectRequest = async (token_id, requestId) => { // Set videorequest status to rejected\r\n\r\n        this.setState({ loading: true })\r\n\r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/rejectvideorequest`, {\r\n            method : \"POST\",\r\n            headers : {\r\n            'Content-Type' : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n            token_id : token_id,\r\n            requestId : requestId\r\n            })\r\n        })\r\n\r\n        if (response.status===200) {\r\n\r\n\r\n            const updatedData = await response.json()\r\n            console.log(updatedData, \"DUAPT\")\r\n            this.props.updateVideoRequests(updatedData)\r\n            this.props.updateRequestStatus(\"rejected\")\r\n\r\n            this.setState({ loading: false })\r\n\r\n        }\r\n\r\n        else {\r\n            this.setState({ loading: false, error : \"Failed to update\" })\r\n        }\r\n\r\n    }\r\n\r\n    handleReject = () => {\r\n\r\n        const token_id = window.localStorage.getItem('token_id')\r\n\r\n        const { requestId } = this.props\r\n        \r\n        this.rejectRequest(token_id, requestId)\r\n    }\r\n\r\n\r\n    fulfillRequest = async (data) => { // Attempt to fulfill a videorequest, \r\n\r\n        this.setState({ loading : true })\r\n        \r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/fulfillvideorequest`, {\r\n            method : \"POST\",\r\n            body : data\r\n        })\r\n\r\n        if (response.status === 200) {\r\n\r\n            const updatedData = await response.json() // Response is an updated list of videorequests & their status info\r\n\r\n            this.props.updateVideoRequests(updatedData)\r\n\r\n            this.props.updateRequestStatus(\"uploading\")\r\n\r\n            this.setState({loading : false})\r\n        }\r\n\r\n        else {\r\n            this.setState({input : \"\", placeHolder : \"Something went wrong\", loading: false})\r\n        }\r\n    }\r\n\r\n    handleFileUpload = (file) => {\r\n\r\n        const { requestId } = this.props\r\n\r\n        const token_id = window.localStorage.getItem('token_id')\r\n\r\n        const data = new FormData()\r\n\r\n        data.append('video', file)\r\n\r\n        data.append('requestId', requestId)\r\n\r\n        data.append('token_id', token_id)\r\n\r\n        this.fulfillRequest(data)\r\n    }\r\n\r\n    render() { \r\n        const {loading} = this.state\r\n\r\n        if (loading) {\r\n            return (<div>\r\n                <Spinner className=\"handle-request-spinner\" animation=\"border\"/>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n            return (<div>\r\n                <Button onClick={() => {this.handleReject()}} className=\"reject-request\" variant=\"danger\">Reject</Button>\r\n                <DropZone handleFileUpload={this.handleFileUpload}/>\r\n                </div>);\r\n        }\r\n\r\n    }\r\n}\r\n \r\nexport default HandleRequest;","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Request.css'\r\nimport YoutubePlayer from './YoutubePlayer';\r\nimport HandleRequest from './HandleRequest/HandleRequest';\r\n\r\nclass Request extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const { status, video } = this.props.data\r\n\r\n        this.state = { \r\n            status : status,\r\n            videoId : video\r\n        }\r\n    }\r\n\r\n    updateRequestStatus = ( status ) => { // Set request status\r\n\r\n        this.setState({status : status})\r\n    }\r\n\r\n    render() { \r\n\r\n        const {title, description, requester, request_id } = this.props.data\r\n\r\n        const { viewOnly } = this.props\r\n\r\n        const { status, videoId } = this.state\r\n\r\n        if (status === \"pending\" || status === \"failed\") {\r\n            return (\r\n                <Card bg=\"warning\">\r\n                    <Card.Body>\r\n                        <div className=\"status\">{status.toUpperCase()}</div>\r\n                        <Card.Text>From : {requester}</Card.Text>\r\n                        <Card.Title className=\"title\">{title}</Card.Title>\r\n                        <Card.Text className=\"description\">{description}</Card.Text>\r\n                        {viewOnly ? null : <HandleRequest updateRequestStatus={this.updateRequestStatus} updateVideoRequests={this.props.updateVideoRequests} requestId={request_id}/>}\r\n                    </Card.Body>\r\n                </Card> );\r\n        \r\n        }\r\n\r\n        if (status === \"rejected\") {\r\n            return (\r\n                <Card bg=\"danger\">\r\n                    <Card.Body>\r\n                        <div className=\"status\">{status.toUpperCase()}</div>\r\n                        <Card.Text>From : {requester}</Card.Text>\r\n                        <Card.Title className=\"title\">{title}</Card.Title>\r\n                        <Card.Text className=\"description\">{description}</Card.Text>\r\n                    </Card.Body>\r\n                </Card> );\r\n        \r\n        }\r\n\r\n        if (status === \"fulfilled\") {\r\n            return (\r\n                <Card bg=\"success\">\r\n                    <Card.Body>\r\n                        <div className=\"status\">{status.toUpperCase()}</div>\r\n                        <YoutubePlayer requestId={request_id} videoId={videoId}/>\r\n                    </Card.Body>\r\n                </Card> );\r\n        \r\n        }\r\n        if (status === \"uploading\") {\r\n            return (\r\n                <Card bg=\"info\">\r\n                    <Card.Body>\r\n                        <div className=\"status\">{status.toUpperCase()}</div>\r\n                        <YoutubePlayer requestId={request_id} videoId={videoId}/>\r\n                    </Card.Body>\r\n                </Card> );\r\n        \r\n        }\r\n        \r\n    }\r\n}\r\n \r\nexport default Request;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst RequestsInfo = (props) => { // Renders info about videorequests\r\n\r\n    const maxAmount = 10 // Max amount of videorequests (Set on the server)\r\n\r\n    const {pending, fulfilled, rejected, uploading, failed, total} = props.status\r\n\r\n    return (\r\n        <Card style={{ width: '25rem' }}>\r\n            <Card.Body>\r\n            <Card.Title>{\"Videorequests\"}</Card.Title>\r\n            <Card.Text>{`TOTAL ${total} / ${maxAmount}`}</Card.Text>\r\n            <Card.Text>{`PENDING ${pending}`}</Card.Text>\r\n            <Card.Text>{`FULFILLED ${fulfilled}`}</Card.Text>\r\n            <Card.Text>{`REJECTED ${rejected}`}</Card.Text>\r\n            <Card.Text>{`UPLOADING ${uploading}`}</Card.Text>\r\n            <Card.Text>{`FAILED ${failed}`}</Card.Text>\r\n            </Card.Body>\r\n        </Card> );\r\n}\r\n \r\nexport default RequestsInfo;","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CreateVideoRequest from './CreateVideoRequest';\r\nimport Request from './Request/Request';\r\nimport RequestsInfo from './RequestsInfo';\r\n\r\nclass VideoRequests extends Component { // Handles everything to do with videorequests\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        const { requests, status } = this.props.profileData\r\n\r\n        this.state = { \r\n            youtubeLoaded : false,\r\n            status : status,\r\n            requests : requests\r\n        }\r\n\r\n    }\r\n\r\n    youtubeLoaded = () => { // Youtube I frame can now be used\r\n\r\n        this.setState({youtubeLoaded : true})\r\n    }\r\n\r\n    updateVideoRequests = (updatedData) => { // Update videorequests data\r\n\r\n        console.log(\"UPDATING\")\r\n        console.log(updatedData)\r\n        const { status, requests } = updatedData\r\n\r\n        this.setState({ status, requests })\r\n\r\n    }\r\n\r\n\r\n    loadYoutubeScripts = () => { // Load scripts needed to use youtube iframe\r\n\r\n        var tag = document.createElement('script');\r\n\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n\r\n        var firstScriptTag = document.getElementsByTagName('script')[0];\r\n\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n        window.onYouTubeIframeAPIReady = this.youtubeLoaded// Called after scripts have been loaded\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (window.YT === undefined) { // Check if scripts have already been loaded\r\n            this.loadYoutubeScripts()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        const { youtubeLoaded, status, requests } = this.state;\r\n        \r\n        if (youtubeLoaded) {\r\n            \r\n            const { viewOnly } = this.props\r\n            console.log(this.props.profileData, \"WITNESS ME\")\r\n            const {video_price, currency, channel_name, user_id } = this.props.profileData\r\n            return (<Container>\r\n                { !viewOnly ? null : <Row>\r\n                    <Col>\r\n                    <CreateVideoRequest updateVideoRequests={this.updateVideoRequests} userId={user_id} currency={currency} videoPrice={video_price} channel_name={channel_name}/>\r\n                    </Col>\r\n                </Row>}\r\n                <Row>\r\n\r\n                <Col>\r\n                    <RequestsInfo status={status}/>\r\n                </Col>\r\n                    \r\n                    {requests.map(vr => {\r\n                        return <Col key={vr.request_id} style={{marginBottom : \"20px\"}}><Request updateVideoRequests={this.updateVideoRequests} viewOnly={viewOnly} data={vr}/></Col>\r\n                    })}\r\n                </Row> \r\n            </Container>);\r\n        }\r\n\r\n        else {\r\n            return <div>Loading</div>\r\n        }\r\n      \r\n\r\n\r\n    }\r\n}\r\n \r\nexport default VideoRequests;\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport LoginScreen from '../Components/LoginScreen/LoginScreen';\r\nimport Profile from '../Components/Profile/Profile';\r\nimport VideoRequests from '../Components/VideoRequests/VideoRequests';\r\n\r\nclass ManageProfile extends Component {\r\n\r\n    state = {\r\n        profileData : false\r\n    }\r\n\r\n    loadProfile = (profileData) => { // Called once user gets profile with the login screen\r\n\r\n        this.setState({ profileData })\r\n    }\r\n\r\n    updateProfileData = (updatedData) => { // Update profile data\r\n        console.log(\"UPDRAGE\")\r\n        \r\n        const { profileData } = this.state\r\n        console.log(profileData, \"EXISTING\")   \r\n        console.log(updatedData, \"UPDATED\")\r\n        profileData.requests = updatedData.requests\r\n\r\n        profileData.status = updatedData.status\r\n\r\n        this.setState({ profileData })\r\n    }\r\n\r\n    render() { \r\n\r\n        const { profileData } = this.state\r\n\r\n        const { requests, status, user_id } = profileData\r\n\r\n        if (profileData) { // Load the user profile\r\n            console.log(profileData)\r\n            return ( \r\n            <Container>\r\n                <Profile profile={profileData}/>\r\n                <VideoRequests updateProfileData={this.updateProfileData} profileData={profileData}/>\r\n            </Container> \r\n            );\r\n        }\r\n\r\n        else { // User needs to sign in\r\n            return ( \r\n            <Container>\r\n                <LoginScreen loadProfile={this.loadProfile}/>\r\n            </Container>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n \r\nexport default ManageProfile","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <div>\r\n        Page Not found\r\n    </div> );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport VideoRequests from '../Components/VideoRequests/VideoRequests';\r\n\r\n\r\nclass ViewProfile extends Component {\r\n\r\n    state = { \r\n        loading : true,\r\n        errorMessage : \"\",\r\n        profileData : false\r\n     }\r\n\r\n\r\n    getUserId = (location) => { // returns userID from href\r\n\r\n        return location.split('viewprofile/')[1]\r\n    }\r\n\r\n    fetchProfile = async (user_id) => { // Fetch profile data\r\n\r\n        try {\r\n            \r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/videorequests/${user_id}`)\r\n\r\n            if (response.status === 200) {\r\n\r\n                const profileData = await response.json()\r\n                console.log(\"FETCH\")\r\n                this.setState({ profileData, loading : false })\r\n            }\r\n    \r\n            else {\r\n\r\n                this.setState({error : true, errorMessage : \"Profile doesn't exist\", loading : false})\r\n            }\r\n        }\r\n        \r\n        catch {\r\n\r\n            this.setState({error : true, errorMessage : \"Could not get profile\", loading : false})\r\n        }\r\n    }\r\n\r\n    updateProfileData = (updatedData) => { // Update profile data\r\n        let { profileData } = this.state\r\n        console.log(profileData, \"EXISTING\")   \r\n        console.log(updatedData, \"UPDATED\")\r\n\r\n        profileData.requests = updatedData.requests\r\n        \r\n        profileData.status = updatedData.status\r\n\r\n        this.setState({profileData : profileData})\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const profileData = this.state.profileData\r\n\r\n        if (!profileData) { // ONLY Fetch profile data if it doesnt exist\r\n\r\n            const userId = this.getUserId(window.location.href)\r\n\r\n            this.fetchProfile(userId)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    render() { \r\n        \r\n        const userId = this.getUserId(window.location.href)\r\n        \r\n        const { profileData, loading, errorMessage } = this.state\r\n\r\n        if (loading) { // Loading\r\n            return <div>Loading</div>\r\n        }\r\n        \r\n        if (profileData) { // Profile data gotten\r\n            //const { videoPrice, currency, channel_name, requests, status, user_id } = profileData\r\n\r\n            return (\r\n                <div>\r\n                    {/*<CreateVideoRequest updateProfileData={this.updateProfileData} userId={userId} currency={currency} videoPrice={videoPrice} channel_name={channel_name}/>*/}\r\n                        <VideoRequests viewOnly profileData={profileData} updateProfileData={this.updateProfileData}/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else { // Show error\r\n            \r\n            return <div>{errorMessage}</div>\r\n\r\n        }\r\n\r\n    }\r\n}\r\n \r\nexport default ViewProfile;","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport ManageProfile from './Views/ManageProfile';\nimport NotFound from './Views/NotFound';\nimport ViewProfile from './Views/ViewProfile';\n\n\nfunction App() {\n  return (\n  <Router basename=\"/video-requester\">\n    <Switch>\n    \n      <Route exact path=\"/\">\n        <ManageProfile/>\n      </Route>\n\n      <Route path='/viewprofile'>\n        <ViewProfile />\n      </Route>\n\n      <Route component={NotFound}/>\n\n    </Switch>\n  </Router>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}