{"version":3,"sources":["Components/Signin/LoginButton.js","Components/VideoRequest/Youtube.js","Components/VideoRequest/Info.js","Components/VideoRequest/VideoRequest.js","Components/RequestsInfo.js","Components/ManageProfile/ManageProfile.js","Components/Home/Home.js","Components/ViewProfile/CreateRequest.js","Components/ViewProfile/ViewProfile.js","App.js","index.js"],"names":["LoginButton","props","disabled","isLoading","clientId","process","buttonText","onSuccess","googleUser","logIn","onFailure","logInFailure","cookiePolicy","Youtube","state","loadingPlayer","loadVideo","id","player","window","YT","Player","videoId","events","onReady","onPlayerReady","event","target","a","width","console","log","fulfillRequest","this","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","Component","Info","style","height","backgroundColor","position","top","left","VideoRequest","checkValidUrl","ytlink","match","length","sendData","linkInfo","setState","loadingData","fetch","method","headers","body","JSON","stringify","token_id","localStorage","getItem","requestId","then","res","status","json","data","catch","er","loadVideoUrl","videoUrl","isValid","requestFulfilled","opacity","transition","videoLoaded","viewOnly","componentRendered","setTimeout","animation","Card","bg","margin","marginTop","right","onChange","e","currentTarget","value","type","Body","Title","title","Text","description","RequestInfo","Popover","as","Content","Button","requestPrice","unfinishedRequests","totalRequests","ManageProfile","loadingContent","loadingIndex","youtubeLoaded","loadYoutube","parseVideoRequests","videoRequests","map","vr","parse","videorequests","Jumbotron","className","paddingLeft","Spinner","Container","fluid","Row","Col","firstname","videoPrice","vidReq","key","request_id","video_id","Home","loggedIn","errorInfo","tokenId","setItem","finally","textAlign","color","CreateRequest","loading","infoMessage","createVideoRequest","user_id","userId","r","placeholder","maxLength","resize","rows","cols","onClick","variant","float","errorMessage","ViewProfile","renderedRequests","creatingVideoRequest","loadingProfile","profileFound","push","getProfile","parseData","arr","location","hash","slice","userName","App","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d94fab5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\n\r\nconst LoginButton = (props) => { // handles the google login \r\n    return (<GoogleLogin\r\n        disabled={props.isLoading}\r\n        clientId={process.env.REACT_APP_CLIENT_ID}\r\n        buttonText={props.isLoading ? \"Loading...\" : \"Login\"}\r\n        onSuccess={(googleUser) => {props.logIn(googleUser)}}\r\n        onFailure={() => {props.logInFailure()}}\r\n        cookiePolicy={'single_host_origin'}\r\n      />)\r\n}\r\n \r\nexport default LoginButton;","import React, { Component } from 'react';\r\n\r\nclass Youtube extends Component {\r\n    state = { \r\n        loadingPlayer : true\r\n     }\r\n\r\n    componentDidMount() {\r\n\r\n        if (!window.YT) { // if script is not loaded, load it\r\n            console.log(\"Script was loaded\")\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api';\r\n    \r\n            window.onYouTubeIframeAPIReady = this.loadVideo; // once youtube video is done loading call loadvideo function\r\n\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        }\r\n        else { // if script already exists, load video directly\r\n            console.log(\"script alraedy loaded\")\r\n            this.loadVideo();\r\n        }\r\n\r\n    }\r\n\r\n    loadVideo = () => {\r\n    \r\n        const { id } = this.props;\r\n        // the Player object is created uniquely based on the id in props\r\n        this.player = new window.YT.Player(`youtube-player-${id}`, {\r\n          videoId: id,\r\n          events: {\r\n            onReady: this.onPlayerReady\r\n          },\r\n        });\r\n      };\r\n\r\n    onPlayerReady = (event) => {\r\n        event.target.a.width = \"100%\";\r\n        console.log(\"player is ready to play\")\r\n        this.props.fulfillRequest()\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( <div id={`youtube-player-${this.props.id}`} /> );\r\n    }\r\n}\r\n \r\nexport default Youtube;","import React from 'react';\r\n\r\nconst Info = () => {\r\n    return ( <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n        <div style={{position:\"absolute\", top : \"150px\", left:\"100px\"}}>Request not fulfilled</div>\r\n    </div> );\r\n}\r\n \r\nexport default Info;","import React, { Component } from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport Youtube from './Youtube.js'\r\nimport Info from './Info.js';\r\nimport './VideoRequest.css'\r\n\r\nclass VideoRequest extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    console.log(\"component mount is happening\")\r\n    this.state = { \r\n      style : {opacity : 1, transition : \"1s\"},\r\n      requestFulfilled : false,\r\n      loadingData : false,\r\n      videoLoaded : false,\r\n      videoId : \"\",\r\n      linkInfo : \"Insert a youtube video link here\",\r\n     }\r\n\r\n    }\r\n     componentDidMount() { // check if component is view only & check if request already fulfilled\r\n       if (this.props.videoId) {\r\n         this.setState({videoId : this.props.videoId, requestFulfilled : true})\r\n       }\r\n       \r\n       if (this.props.viewOnly) { // checks if you are fulfilling or viewing video requests\r\n        console.log(\"view only component\")\r\n       }\r\n       this.props.componentRendered()\r\n       setTimeout(() => {console.log(\"ti tii ti ititii itiitiii\", this.props.videoId)}, 2000)\r\n     }\r\n\r\n     checkValidUrl = (ytlink) => { // checks if youtube link is valid, returns the video id if it is\r\n      var regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\r\n      var match = ytlink.match(regExp);\r\n      if (match && match[2].length === 11) {\r\n      return match[2];\r\n      } else {\r\n      return false\r\n      }\r\n     }\r\n\r\n     sendData = (videoId) => { // Send a post request to backend\r\n      let { linkInfo } = this.state.linkInfo;\r\n      this.setState({loadingData : true})\r\n      console.log(\"sending request\")\r\n      fetch(\"http://localhost:3001/fulfillrequest\", {\r\n        method : \"POST\",\r\n        headers : {\r\n          'Content-Type' : \"application/json\"\r\n        },\r\n        body : JSON.stringify({\r\n          videoId : videoId,\r\n          token_id : window.localStorage.getItem(\"token_id\"),\r\n          requestId : this.props.requestId\r\n          \r\n        })\r\n      }).then(res => {\r\n        if (res.status === 201) { // data was accepted, world peace is achieved\r\n          res.json().then(data => {\r\n            this.fulfillRequest(videoId)\r\n          })\r\n        }\r\n        else {\r\n          console.log(\"something went wrong with the request\")\r\n          linkInfo = \"Something went wrong\"\r\n          \r\n        }\r\n        this.setState({loadingData : false, linkInfo : linkInfo})\r\n      })\r\n      .catch(er => {\r\n        console.log(er)\r\n        linkInfo = \"Unable to connect to server\"\r\n        this.setState({loadingData : false, linkInfo})\r\n      })\r\n     }\r\n\r\n     loadVideoUrl = (videoUrl) => {  // validate youtube video URL\r\n      const isValid = this.checkValidUrl(videoUrl) // contains false if not valid url, contains the valid url otherwise\r\n      if (isValid) {\r\n        this.sendData(isValid)\r\n        \r\n      }\r\n      else {\r\n        this.setState({linkInfo : \"not valid youtube link\"})\r\n      }\r\n\r\n    }\r\n\r\n    fulfillRequest = (videoId) => { // load youtube video & called dataRequest is ok\r\n      this.setState({requestFulfilled : true, videoId : videoId})\r\n    }\r\n\r\n    render() { \r\n        return ( <div style={{animation : \"appearance 5s\"}}>\r\n            <Card bg={this.state.requestFulfilled ? \"success\" : \"warning\"} style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\"}}>\r\n            {this.state.requestFulfilled ? <Youtube fulfillRequest={this.fulfillRequest} id={this.state.videoId}/> : this.props.viewOnly? <Info />: this.state.loadingData ? <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n  <div style={{position:\"absolute\", right:\"80px\", top:\"175px\"}}>\r\n  <div>Loading</div>\r\n  </div>\r\n  </div>: <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n  <div style={{position:\"absolute\", right:\"80px\", top:\"175px\"}}>\r\n  <div><input style={{width:\"200px\"}} onChange={(e) => {this.loadVideoUrl(e.currentTarget.value)}} type=\"text\"/></div>\r\n  <p>{this.state.linkInfo}</p>\r\n  </div>\r\n  </div>}\r\n\r\n  <Card.Body>\r\n    <Card.Title>{this.props.title}</Card.Title>\r\n    <Card.Text>\r\n      {this.props.description}\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default VideoRequest;","import React, { Component } from 'react';\r\nimport {Popover, Overlay, Button, OverlayTrigger, Card} from 'react-bootstrap';\r\n\r\nconst popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Max video requests</Popover.Title>\r\n      <Popover.Content>\r\n      <input type=\"text\" />\r\n      <Button>Save</Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\nclass RequestInfo extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <div>\r\n            <Card style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\" }}>\r\n  <Card.Body>\r\n    <Card.Title><h1>Video Requests</h1></Card.Title>\r\n    <Card.Text>\r\n      Here is the list of all recent video requests\r\n    </Card.Text>\r\n    <Card.Text>\r\n      The price for a video is : {this.props.requestPrice}\r\n    </Card.Text>\r\n    <div><h2>{this.props.unfinishedRequests}/{this.props.totalRequests} unfilled video requests</h2></div>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default RequestInfo;\r\n","import React, { Component } from 'react';\r\nimport {Button, Container, Col, Row, Jumbotron, Card, Spinner} from 'react-bootstrap/';\r\nimport './ManageProfile.css';\r\nimport VideoRequest from '../VideoRequest/VideoRequest';\r\nimport RequestInfo from '../RequestsInfo';\r\n\r\nclass ManageProfile extends Component {\r\n    state = {\r\n        loadingContent : true,\r\n        loadingIndex : 0,\r\n        unfinishedRequests : 0,\r\n        data : false\r\n     }\r\n\r\n    youtubeLoaded = () => { // fires once youtube script is loaded\r\n      console.log(\"youtube iframe api loaded\");\r\n\r\n      this.setState({loadingContent : false})\r\n    }\r\n\r\n    loadYoutube = () => { // loads youtube script\r\n\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      window.onYouTubeIframeAPIReady = this.youtubeLoaded; // once youtube video is done loading call loadvideo function\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    }\r\n\r\n    parseVideoRequests = (videoRequests) => {\r\n      return videoRequests.map(vr => {\r\n        return JSON.parse(vr)\r\n      })\r\n    }\r\n\r\n    componentDidMount() { // loads youtube & parse data\r\n        let data = this.props.data\r\n        this.loadYoutube()\r\n        data.videorequests = this.parseVideoRequests(this.props.data.videorequests)\r\n        // data which is gotten from database\r\n        console.log(data, \"parsed data\")\r\n        this.setState({data : data})\r\n    }\r\n\r\n    render() { \r\n        const data = this.state.data\r\n        if (this.state.loadingContent) {\r\n            return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Loading...</h1>\r\n  <p>\r\n    loading info...\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n<div style={{paddingLeft:\"50%\", width:\"100%\"}}><Spinner animation=\"border\" /></div>\r\n            </div>)\r\n        } // Does a get request to get the profile, allows managing the profile\r\n        return ( <div>\r\n<Container fluid>\r\n  <Row>\r\n  <Col>\r\n  <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>{data.firstname}</h1>\r\n  <p>\r\n    Basic info about {data.firstname}\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n</Col>\r\n  </Row>\r\n  <Row>\r\n  <Col>\r\n  <RequestInfo unfinishedRequests={this.state.data.unfinishedRequests} videoPrice={this.state.data.videoPrice}/>\r\n  </Col>\r\n  {this.state.data.videorequests.map(vidReq => {\r\n      return (<Col> <VideoRequest key={vidReq.request_id} requestId={vidReq.request_id} description={vidReq.description} title={vidReq.title} videoId={vidReq.video_id}/></Col>)\r\n  })}\r\n  </Row>\r\n</Container>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ManageProfile;","import React, { Component } from 'react';\r\nimport LoginButton from '../Signin/LoginButton';\r\nimport ManageProfile from '../ManageProfile/ManageProfile';\r\nimport { Jumbotron, Button } from 'react-bootstrap';\r\n\r\nclass Home extends Component {\r\n\r\n    state = { \r\n        isLoading : false,\r\n        loggedIn : false,\r\n        errorInfo : \"\",\r\n        data : false\r\n     }\r\n\r\n     logIn = (googleUser) => { // login happens checks if user already exists in the database, create a new profile if not\r\n\r\n        this.setState({isLoading : true})\r\n\r\n        const token_id = googleUser.tokenId;\r\n\r\n        fetch(\"http://localhost:3001/signin\", {\r\n            method : \"POST\",\r\n            headers : {\r\n              'Content-Type' : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n              token_id : token_id\r\n              \r\n            })\r\n          }).then(res => {\r\n            if (res.status === 200) { // user alredy exists\r\n              res.json().then(data => {\r\n                this.setState({loggedIn : true, data : data})\r\n                window.localStorage.setItem('token_id', token_id)\r\n              })\r\n            }\r\n            else if (res.status === 201) { // new user created\r\n              res.json().then(data => {\r\n                console.log(data)\r\n                this.setState({loggedIn : true, data : data})\r\n                window.localStorage.setItem('token_id', token_id)\r\n              })\r\n            }\r\n            else {\r\n              console.log(\"no bueno status is not 200 ok\")\r\n              this.setState({errorInfo : \"Something went wrong while signin in\"})\r\n            }  \r\n          })\r\n          .catch(er => {\r\n            console.log(er)\r\n            this.setState({errorInfo : \"Couldn't connect to the server\"})\r\n            console.log(\"yo man, there is an error connecting to server\")\r\n          })\r\n          .finally(() => {\r\n            this.setState({isLoading : false})\r\n          })\r\n        //this.setState({loggedIn : true})\r\n        /*const name = googleUser\r\n        const firstName = \r\n        const lastName = */\r\n        \r\n     }\r\n\r\n     logInFailure = () => { // Something went wrong with  google authentication login\r\n        console.log(\"failed to log in\")\r\n     }\r\n\r\n    render() { \r\n        if (!this.state.loggedIn) {\r\n            return ( <div style={{textAlign : \"center\", marginTop : \"290px\"}}>\r\n                <Jumbotron>\r\n  <h1>Requstenator</h1>\r\n  <p>\r\n  Create and sell custom video content for your audience!\r\n  </p>\r\n  <p>\r\n  <LoginButton isLoading={this.state.isLoading} logInFailure={this.logInFailure} logIn={this.logIn}/>\r\n  </p>\r\n  <p style={{color:\"red\"}}>{this.state.errorInfo}</p>\r\n</Jumbotron>\r\n            </div> );\r\n        }\r\n        else if (this.state.loggedIn) {\r\n            return <div>\r\n                <ManageProfile data={this.state.data}/>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n \r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Card, Button, Spinner } from 'react-bootstrap';\r\n\r\nclass CreateRequest extends Component {\r\n    state = { \r\n        loading : false,\r\n        title : \"\",\r\n        description : \"\",\r\n        infoMessage : \"\"\r\n     }\r\n\r\n     createVideoRequest = (title, description) => {\r\n       fetch(\"http://localhost:3001/createrequest\", {\r\n         method : \"POST\",\r\n         headers : {\r\n          'Content-Type': 'application/json'\r\n         },\r\n         body : JSON.stringify({\r\n           user_id : this.props.userId,\r\n           title : title,\r\n           description : description\r\n         })\r\n       }).then(r => {\r\n         if (r.status === 201) {\r\n           console.log(\"created a new video request\")\r\n           this.setState({infoMessage : \"Video requested\"})\r\n           \r\n         }\r\n         else {\r\n           console.log(\"something went wrong with requesting video\")\r\n           this.setState({infoMessage : \"Connection error\"})\r\n         }\r\n       })\r\n     }\r\n\r\n    render() { \r\n        const {title, description} = this.state\r\n        return ( <div>\r\n            <Card style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\"}}>\r\n  <Card.Body>\r\n    <Card.Title><input disabled={this.state.loading} onChange={(e) => {this.setState({title : e.currentTarget.value})}} value={title} type=\"text\" placeholder=\"Title\" maxLength=\"35\"/></Card.Title>\r\n    <Card.Text>\r\n    <textarea disabled={this.state.loading} onChange={(e) => {this.setState({description : e.currentTarget.value})}} value={description} maxLength=\"854\" style={{resize : \"none\"}} rows=\"14.5\" cols=\"40\" placeholder=\"Write a description of the video you want\"/>\r\n    </Card.Text>\r\n    <Button onClick={() => {this.props.createVideoRequest(title, description)}} disabled={this.state.loading} variant=\"primary\">{this.state.loading ? <Spinner animation=\"border\" /> : \"Request video\"}</Button>\r\n    <p style={{float:\"right\", color:\"red\"}}>{this.state.errorMessage}</p>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default CreateRequest;","import React, { Component } from 'react';\r\nimport { Jumbotron, Spinner, Row, Col, Container } from 'react-bootstrap';\r\nimport RequestInfo from '../RequestsInfo';\r\nimport VideoRequest from '../VideoRequest/VideoRequest';\r\nimport CreateRequest from './CreateRequest';\r\n\r\nclass ViewProfile extends Component {\r\n    state = { \r\n        renderedRequests : [],\r\n        requestPrice : \"Free\",\r\n        totalRequests : 25,\r\n        unfinishedRequests : 0,\r\n        creatingVideoRequest : false,\r\n        data : false,\r\n        userId : \"\",\r\n        loadingProfile : false,\r\n        profileFound : false\r\n     }\r\n\r\n     createVideoRequest = (title, description) => { // If video request is added to db, create one locally on the frontend as well with this\r\n       const data = this.state.data;\r\n       const vr = {\r\n         title : title,\r\n         description : description,\r\n       }\r\n       data.push(vr)\r\n       this.setState({data : data})\r\n       \r\n       console.log(\"send video request to backend \")\r\n       console.log(title, description)\r\n     }\r\n\r\n     getProfile = (userId) => {\r\n       console.log(\"am i happeninig?\")\r\n      fetch(`http://localhost:3001/getprofile/${userId}`).then(r => {\r\n        if (r.status === 200) {\r\n          r.json().then(data => {\r\n            \r\n            data = this.parseData(data)\r\n            console.log(\"this was gotten\", data)\r\n            this.setState({data : data, profileFound : true, userId : userId})\r\n          })\r\n        }\r\n        else { // profile not found\r\n          console.log(\"something went wrong\")\r\n        }\r\n      })\r\n    }\r\n\r\n    parseData = (arr) => { // parse received videorequests\r\n      return arr.map(vr => {\r\n        return JSON.parse(vr)\r\n      })\r\n    }\r\n\r\n\r\n    componentRendered = () => { // called by every single rendered request component\r\n      const renderedRequests = this.state.renderedRequests;\r\n      const data = this.state.data\r\n      renderedRequests.push(data[renderedRequests.length]) /////// NANANANANAAA\r\n      this.setState({ renderedRequests })\r\n    }\r\n\r\n    componentDidMount () {\r\n      const userId = window.location.hash.slice(1)\r\n      console.log(\"mounting\", userId); // does a get requets with hash to see if there is \r\n      this.getProfile(userId)\r\n      \r\n    }\r\n\r\n    render() { \r\n        const { loadingProfile, data, profileFound } = this.state\r\n        if (loadingProfile) {\r\n          return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Loading...</h1>\r\n  <p>\r\n    loading info...\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n<div style={{paddingLeft:\"50%\", width:\"100%\"}}><Spinner animation=\"border\" /></div>\r\n            </div>)\r\n        }\r\n        else if (!profileFound) {\r\n          return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Not found</h1>\r\n  <p>\r\n    Profile with that name was not found\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n            </div>)\r\n        }\r\n        else {\r\n            const { data } = this.state\r\n            return ( <div>\r\n              <Container fluid>\r\n                <Row>\r\n                <Col>\r\n                <Jumbotron>\r\n                <div className=\"headline\">\r\n                <h1>{data.userName}</h1>\r\n                <p>\r\n                  Basic info about {data.userName}\r\n                </p>\r\n                </div>\r\n              </Jumbotron>\r\n              </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col>\r\n                <RequestInfo totalRequests={this.state.totalRequests} unfinishedRequests={this.state.unfinishedRequests} requestPrice={this.state.requestPrice}/>\r\n                </Col>\r\n\r\n                {this.state.data.map(vidReq => {\r\n                    return (<Col> <VideoRequest componentRendered={this.componentRendered} viewOnly={true} description={vidReq.description} title={vidReq.title} videoId={vidReq.video_id}/></Col>)\r\n                })}\r\n                <Col>\r\n                <CreateRequest createVideoRequest={this.createVideoRequest} userId={this.state.userId}/>\r\n                </Col>\r\n                </Row>\r\n              </Container>\r\n                      </div> );\r\n        }\r\n    }\r\n}\r\n \r\nexport default ViewProfile;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { GoogleLogin } from 'react-google-login';\nimport Home from './Components/Home/Home';\nimport ViewProfile from './Components/ViewProfile/ViewProfile';;\n\nfunction App() {\n  return (<Router>\n    <Switch>\n    <Route path=\"/viewprofile\">\n      <ViewProfile />\n    </Route>\n    <Route path=\"/\">\n      <Home />\n    </Route>\n  </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}