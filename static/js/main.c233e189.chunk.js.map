{"version":3,"sources":["loader.gif","Components/Signin/LoginButton.js","Components/VideoRequest/Youtube.js","Components/VideoRequest/Info.js","Components/VideoRequest/Loading.js","Components/VideoRequest/VideoRequest.js","Components/SharedComponents/RequestsInfo.js","Components/ManageProfile/EditProfile.js","Components/ManageProfile/ManageProfile.js","Components/Home/Home.js","Components/PaymentScreen/CardSection.js","Components/PaymentScreen/CheckoutForm.js","Components/PaymentScreen/PaymentScreen.js","Components/ViewProfile/CreateRequest.js","Components/ViewProfile/ViewProfile.js","Components/NotFound.js","App.js","index.js"],"names":["module","exports","LoginButton","props","disabled","isLoading","clientId","process","buttonText","onSuccess","googleUser","logIn","onFailure","logInFailure","cookiePolicy","Youtube","state","loadingPlayer","loadVideo","id","player","window","YT","Player","height","width","videoId","events","onReady","onPlayerReady","event","fulfillRequest","console","log","this","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","Component","Info","style","backgroundColor","position","top","left","Loading","alt","loader","VideoRequest","checkValidUrl","ytlink","match","length","sendData","linkInfo","setState","loading","fetch","method","headers","body","JSON","stringify","token_id","localStorage","getItem","requestId","then","res","status","json","data","catch","er","finally","d","loadVideoUrl","videoUrl","isValid","opacity","transition","requestFulfilled","viewOnly","className","Card","bg","margin","marginTop","right","onChange","e","currentTarget","value","type","Body","Title","title","Text","description","RequestInfo","unfulfilledRequestsAmount","fulfilledRequestsAmount","requestsAmount","Button","videoPrice","price","currency","currencyTypes","VideoPrice","input","saved","setPrice","changedData","OverlayTrigger","onExit","trigger","placement","overlay","Popover","as","Content","min","max","onClick","variant","Currency","currentlySelected","toUpperCase","setCurrency","cur","DropdownButton","display","map","Dropdown","Item","key","Username","editingProfile","userName","setUsername","maxLength","EditProfile","infoText","stripeAccount","saveProfile","re","Jumbotron","Row","Col","md","target","href","location","user_id","stripeState","Spinner","animation","ManageProfile","loadingContent","loadingIndex","unfinishedRequests","youtubeLoaded","loadYoutube","parseVideoRequests","videoRequests","vr","parse","checkStripeIntegration","string","includes","rejectRequest","request_id","videorequests","filter","stripe_account_id","paddingLeft","Container","fluid","username","video_price","vidReq","video_id","Home","loggedIn","errorInfo","tokenId","setItem","alert","clas","textAlign","class","fontSize","marginBottom","classNameName","CARD_ELEMENT_OPTIONS","base","color","fontFamily","fontSmoothing","invalid","iconColor","CardSection","options","CheckoutForm","name","email","payment_intent","errorMessage","paymentHandled","handleSubmit","a","preventDefault","stripe","elements","clientSecret","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","result","error","message","paymentIntent","togglePaymentScreen","Form","onSubmit","Group","controlId","Label","Control","placeholder","React","InjectedCheckoutForm","PaymentScreen","r","requestToBeCreated","createVideoRequest","CreateRequest","paymentScreen","infoMessage","startPaymentProcess","userId","payment_id","resize","rows","cols","float","ViewProfile","renderedRequests","requestPrice","totalRequests","creatingVideoRequest","loadingData","push","getProfile","hash","slice","unfilledRequests","componentRendered","NotFound","App","basename","exact","path","component","stripePromise","loadStripe","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c233e189.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.9bdf6f25.gif\";","import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\n\r\nconst LoginButton = (props) => { // handles the google login \r\n    return (<GoogleLogin\r\n        disabled={props.isLoading}\r\n        clientId={process.env.REACT_APP_CLIENT_ID}\r\n        buttonText={props.isLoading ? \"Loading...\" : \"Login\"}\r\n        onSuccess={(googleUser) => {props.logIn(googleUser)}}\r\n        onFailure={() => {props.logInFailure()}}\r\n        cookiePolicy={'single_host_origin'}\r\n      />)\r\n}\r\n \r\nexport default LoginButton;","import React, { Component } from 'react';\r\n\r\nclass Youtube extends Component {\r\n    state = { \r\n        loadingPlayer : true\r\n     }\r\n\r\n    componentDidMount() {\r\n\r\n        if (!window.YT) { // if script is not loaded, load it\r\n            console.log(\"Script was loaded\")\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api';\r\n    \r\n            window.onYouTubeIframeAPIReady = this.loadVideo; // once youtube video is done loading call loadvideo function\r\n\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        }\r\n        else { // if script already exists, load video directly\r\n            console.log(\"script alraedy loaded\")\r\n            this.loadVideo();\r\n        }\r\n\r\n    }\r\n\r\n    loadVideo = () => {\r\n    \r\n        const { id } = this.props;\r\n        // the Player object is created uniquely based on the id in props\r\n        this.player = new window.YT.Player(`youtube-player-${id}`, {\r\n          height : 360,\r\n          width : 350,\r\n          videoId: id,\r\n          events: {\r\n            onReady: this.onPlayerReady\r\n          },\r\n        });\r\n      };\r\n\r\n    onPlayerReady = (event) => {\r\n        this.props.fulfillRequest()\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( <div id={`youtube-player-${this.props.id}`} /> );\r\n    }\r\n}\r\n \r\nexport default Youtube;","import React from 'react';\r\n\r\nconst Info = () => {\r\n    return ( <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n        <div style={{position:\"absolute\", top : \"150px\", left:\"100px\"}}>Request not fulfilled</div>\r\n    </div> );\r\n}\r\n \r\nexport default Info;","import React from 'react';\r\nimport loader from '../../loader.gif'\r\n\r\nconst Loading = () => {\r\n    return ( <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n    <img alt=\"loader\" src={loader} width=\"100%\" height=\"100%\"/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Loading;\r\n\r\n\r\n\r\n/*<div className=\"top-content\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner>\r\n\r\n    </div>  */","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Youtube from './Youtube.js'\r\nimport Info from './Info.js';\r\nimport './VideoRequest.css'\r\nimport Loading from './Loading.js';\r\n\r\nclass VideoRequest extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    console.log(\"component mount is happening\")\r\n    this.state = { \r\n      style : {opacity : 0.0, transition : \"1s\"},\r\n      requestFulfilled : false,\r\n      loading : false,\r\n      videoId : \"\",\r\n      linkInfo : \"Insert a youtube video link here\",\r\n     }\r\n\r\n    }\r\n     componentDidMount() { // check if component is view only & check if request already fulfilled\r\n       if (this.props.videoId) {\r\n         this.setState({videoId : this.props.videoId, requestFulfilled : true})\r\n       }\r\n       else {\r\n         this.fulfillRequest()\r\n       }\r\n       \r\n       if (this.props.viewOnly) { // checks if you are fulfilling or viewing video requests\r\n        console.log(\"view only component\")\r\n       }\r\n     }\r\n\r\n     checkValidUrl = (ytlink) => { // checks if youtube link is valid, returns the video id if it is\r\n      var regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\r\n      var match = ytlink.match(regExp);\r\n      if (match && match[2].length === 11) {\r\n      return match[2];\r\n      } else {\r\n      return false\r\n      }\r\n     }\r\n\r\n     sendData = (videoId) => { // Send a post request to backend\r\n      let { linkInfo } = this.state.linkInfo;\r\n      this.setState({loading : true})\r\n      console.log(\"sending request\")\r\n      fetch(\"https://requstenator-server.herokuapp.com/fulfillrequest\", {\r\n        method : \"POST\",\r\n        headers : {\r\n          'Content-Type' : \"application/json\"\r\n        },\r\n        body : JSON.stringify({\r\n          videoId : videoId,\r\n          token_id : window.localStorage.getItem(\"token_id\"),\r\n          requestId : this.props.requestId\r\n          \r\n        })\r\n      }).then(res => {\r\n        if (res.status === 201) { // data was accepted, world peace is achieved\r\n          res.json().then(data => {\r\n            this.fulfillRequest(videoId)\r\n          })\r\n        }\r\n        else {\r\n          console.log(\"something went wrong with the request\")\r\n          linkInfo = \"Something went wrong\"\r\n          \r\n        }\r\n      })\r\n      .catch(er => {\r\n        console.log(er)\r\n        linkInfo = \"Unable to connect to server\"\r\n        \r\n      })\r\n      .finally((d) => {\r\n        this.setState({loading : false, linkInfo})\r\n        console.log(d, \"final data\")\r\n      })\r\n     }\r\n\r\n     loadVideoUrl = (videoUrl) => {  // validate youtube video URL\r\n      const isValid = this.checkValidUrl(videoUrl) // contains false if not valid url, contains the valid url otherwise\r\n      if (isValid) {\r\n        this.sendData(isValid)\r\n        \r\n      }\r\n      else {\r\n        this.setState({linkInfo : \"not valid youtube link\"})\r\n      }\r\n\r\n    }\r\n\r\n    fulfillRequest = (videoId) => { // load youtube video & called dataRequest is ok\r\n      let style = this.state.style\r\n      style = {opacity : 1, transition : \"1s\"}\r\n      if (videoId) {\r\n        this.setState({requestFulfilled : true, videoId : videoId, loading : false, style : style})\r\n      }\r\n      else {\r\n        this.setState({loading : false, style : style})\r\n      }\r\n\r\n\r\n    }\r\n\r\n    render() { \r\n        return ( <div style={this.state.style} className=\"video-request\">\r\n            <Card bg={this.state.requestFulfilled ? \"success\" : \"warning\"} style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\"}}>\r\n            {this.state.loading ? <Loading /> : this.state.requestFulfilled ? <Youtube fulfillRequest={this.fulfillRequest} id={this.state.videoId}/> : this.props.viewOnly? <Info />: <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n  <div style={{position:\"absolute\", right:\"80px\", top:\"175px\"}}>\r\n  <div><input style={{width:\"200px\"}} onChange={(e) => {this.loadVideoUrl(e.currentTarget.value)}} type=\"text\"/></div>\r\n  <p>{this.state.linkInfo}</p>\r\n  </div>\r\n  </div>}\r\n\r\n  <Card.Body>\r\n    <Card.Title>{this.props.title}</Card.Title>\r\n    <Card.Text>\r\n      {this.props.description}\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default VideoRequest;","import React, { Component } from 'react';\r\nimport {Button, Card} from 'react-bootstrap';\r\n\r\n\r\nclass RequestInfo extends Component {\r\n    state = {  }\r\n    render() { const { unfulfilledRequestsAmount, fulfilledRequestsAmount, requestsAmount } = this.props\r\n    console.log(unfulfilledRequestsAmount, fulfilledRequestsAmount, requestsAmount, \"WATCH THESE\")\r\n        return ( <div>\r\n            <Card style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\" }}>\r\n  <Card.Body>\r\n    <Card.Title><h1>Video Requests</h1></Card.Title>\r\n    <Card.Text>\r\n      Here is the list of all recent video requests\r\n    </Card.Text>\r\n    <Card.Text>\r\n      The price for a video request is : <Button>{this.props.videoPrice.price + \" \" + this.props.videoPrice.currency}</Button>\r\n    </Card.Text>\r\n    <div><h2>{unfulfilledRequestsAmount}/{requestsAmount} unfilled video requests</h2></div>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default RequestInfo;\r\n","import React, { Component } from 'react';\r\nimport { Jumbotron, Button, OverlayTrigger, Popover, Row, Col, Dropdown, DropdownButton, Spinner } from 'react-bootstrap';\r\n\r\n\r\nconst currencyTypes = [\"USD\", \"EUR\", \"GBP\"]\r\n\r\nclass VideoPrice extends Component {\r\n  state = { \r\n    input :  \"\", \r\n    currency : \"\",\r\n    price :\"\",\r\n    saved : false\r\n  }\r\n\r\n  setPrice = () => {\r\n    this.setState({ price : this.state.input})\r\n    this.props.changedData(\"video_price\", this.state.input);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({currency : this.props.currency, price:this.props.price})\r\n  }\r\n  render() { \r\n    return ( <OverlayTrigger onExit={() => {this.setState({input : \"\"})}} trigger=\"click\" placement=\"top\" overlay={<Popover id=\"popover-basic\">\r\n    <Popover.Title as=\"h3\">Set video price</Popover.Title>\r\n        <Popover.Content>\r\n        <input type=\"number\" min=\"0\" max=\"500\" value={this.state.input} onChange={(e) => {this.setState({input : e.currentTarget.value})}}/>\r\n        <Button onClick={() => {this.setPrice()}}>Save</Button>\r\n        </Popover.Content>\r\n      </Popover>}>\r\n        <Button disabled={this.props.disabled} variant=\"success\"><h1>{this.state.input.length <= 0 ? this.state.price : this.state.input}</h1></Button>\r\n      </OverlayTrigger> );\r\n  }\r\n}\r\n\r\nclass Currency extends Component {\r\n  state = { \r\n    currentlySelected : this.props.currency.toUpperCase()\r\n   }\r\n\r\n  setCurrency = (cur) => {\r\n    this.setState({currentlySelected : cur});\r\n    this.props.changedData(\"currency\", cur);\r\n  }\r\n  render() { \r\n    return ( \r\n      <DropdownButton disabled={this.props.disabled} id=\"dropdown-basic-button\" title={this.state.currentlySelected} style={{display:\"inline\"}}>\r\n    {currencyTypes.map(cur => {\r\n    return <Dropdown.Item key={cur} onClick={() => {this.setCurrency(cur)}}>{cur}</Dropdown.Item>\r\n    })}\r\n  </DropdownButton>\r\n  );\r\n  }\r\n}\r\n\r\nclass Username extends Component {\r\n  state = { \r\n    editingProfile : false,\r\n    input :  \"\", \r\n    userName : \"\",\r\n    saved : false\r\n  }\r\n\r\n  setUsername = () => {\r\n    this.setState({userName : this.state.input})\r\n    this.props.changedData(\"username\", this.state.input);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({userName : this.props.userName})\r\n  }\r\n  render() { \r\n    return ( <OverlayTrigger onExit={() => {this.setState({input : \"\"})}} trigger=\"click\" placement=\"top\" overlay={<Popover id=\"popover-basic\">\r\n    <Popover.Title as=\"h3\">Rename username</Popover.Title>\r\n        <Popover.Content>\r\n        <input maxLength=\"25\" type=\"text\" value={this.state.input} onChange={(e) => {this.setState({input : e.currentTarget.value})}}/>\r\n        <Button onClick={() => {this.setUsername()}}>Save</Button>\r\n        </Popover.Content>\r\n      </Popover>}>\r\n        <Button disabled={this.props.disabled} variant=\"success\"><h1>{this.state.input.length <= 0 ? this.state.userName : this.state.input}</h1></Button>\r\n      </OverlayTrigger> );\r\n  }\r\n}\r\n\r\n\r\nclass EditProfile extends Component {\r\n    state = { \r\n      infoText : \"\",\r\n      loading : false,\r\n      stripeAccount : true,\r\n      changedData : {}\r\n     }\r\n\r\n\r\n     saveProfile = () => { // save changes on db\r\n      this.setState({loading : true})\r\n      const changedData = this.state.changedData;\r\n       console.log(this.state.changedData, \"CHANGED DATA YOU\")\r\n       fetch(\"https://requstenator-server.herokuapp.com/editprofile\", {\r\n         method : \"POST\",\r\n         headers : {\r\n          'Content-Type' : \"application/json\"\r\n        },\r\n         body : JSON.stringify({\r\n           token_id : window.localStorage.getItem(\"token_id\"),\r\n           data : changedData\r\n         })\r\n       }).then(re => {\r\n         re.json().then(d => {\r\n           console.log(\"parsed data\", d)\r\n           this.setState({loading : false})\r\n         })\r\n       })\r\n     }\r\n\r\n    changedData = (type, value) => { // saves the changed user data\r\n      const changedData = this.state.changedData\r\n      changedData[type] = value\r\n      this.setState({ changedData })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n      this.setState({userName : this.props.userName}) // set initial data\r\n    }\r\n\r\n    render() { \r\n      const {loading, infoText} = this.state\r\n        return ( <div className=\"top-info\">\r\n              <Jumbotron>\r\n              <h1><Username disabled={loading} userName={this.props.userName} changedData={this.changedData}/></h1>\r\n  <Row>\r\n  <Col md=\"6\">\r\n  <p>Tell your audience to send video requests here : <a target=\"blank\" href={window.location.href + \"viewprofile#\" + this.props.user_id}>{window.location.href + \"viewprofile#\" + this.props.user_id}</a></p>\r\n  {this.state.stripeAccount ? <p>You have integrated stripe to your profile!</p> : <p>Start charging money for video requests : <a href={`https://connect.stripe.com/express/oauth/authorize?client_id=${process.env.REACT_APP_STRIPE_CLIENT_ID}&state=${this.props.stripeState}.com`}>Create Stripe Account</a></p>}\r\n  </Col>\r\n  <Col>\r\n  <p>Current video price is <VideoPrice disabled={loading} price={this.props.price} changedData={this.changedData}/> <Currency disabled={loading} currency={this.props.currency} changedData={this.changedData}/></p>\r\n  <Button disabled={loading} onClick={() => {this.saveProfile()}}>{loading ? <Spinner animation=\"border\" /> : \"Save changes\"}</Button>\r\n  <p>{infoText}</p>\r\n  </Col>\r\n  </Row>\r\n</Jumbotron>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default EditProfile;","import React, { Component } from 'react';\r\nimport { Container, Col, Row, Jumbotron, Spinner } from 'react-bootstrap/';\r\nimport './ManageProfile.css';\r\nimport VideoRequest from '../VideoRequest/VideoRequest';\r\nimport RequestInfo from '../SharedComponents/RequestsInfo';\r\nimport EditProfile from './EditProfile';\r\n\r\nclass ManageProfile extends Component {\r\n    state = {\r\n        stripeAccount : false,\r\n        loadingContent : true,\r\n        loadingIndex : 0,\r\n        unfinishedRequests : 0,\r\n        data : false\r\n     }\r\n\r\n    youtubeLoaded = () => { // fires once youtube script is loaded\r\n      console.log(\"youtube iframe api loaded\");\r\n\r\n      this.setState({loadingContent : false})\r\n    }\r\n\r\n    loadYoutube = () => { // loads youtube script\r\n\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      window.onYouTubeIframeAPIReady = this.youtubeLoaded; // once youtube video is done loading call loadvideo function\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    }\r\n\r\n    parseVideoRequests = (videoRequests) => {\r\n      return videoRequests.map(vr => {\r\n        return JSON.parse(vr)\r\n      })\r\n    }\r\n\r\n\r\n    checkStripeIntegration = (string) => { // returns true if stripe accout has been integrated\r\n      if (string.includes(\"acct_\")) {\r\n        return true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }\r\n\r\n    rejectRequest = (request_id) => { // deletes the video request locally, called after succesfull db deletion\r\n      const videoRequests = this.state.data.videorequests.filter\r\n    }\r\n\r\n    componentDidMount() { // loads youtube & parse data\r\n        let data = this.props.data\r\n        this.loadYoutube()\r\n        data.videorequests = this.parseVideoRequests(this.props.data.videorequests)\r\n        const stripeAccount = this.checkStripeIntegration(data.stripe_account_id)\r\n        console.log(data, \"parsed data\")\r\n        \r\n        this.setState({data : data, stripeAccount : stripeAccount})\r\n    }\r\n\r\n    render() { \r\n\r\n        const stripeState = this.state.data.stripeState\r\n\r\n        const data = this.state.data\r\n        if (this.state.loadingContent) {\r\n            return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Loading...</h1>\r\n  <p>\r\n    loading info...\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n<div style={{paddingLeft:\"50%\", width:\"100%\"}}><Spinner animation=\"border\" /></div>\r\n            </div>)\r\n        } // Does a get request to get the profile, allows managing the profile\r\n        return ( <div>\r\n<Container fluid>\r\n  <EditProfile stripeState={stripeState} userName={data.username} user_id={data.user_id} price={data.video_price} currency={data.currency}/>\r\n  <Row>\r\n  <Col>\r\n  <RequestInfo videoPrice={{price : data.video_price, currency: data.currency}} unfulfilledRequestsAmount={this.state.data.requestsAmount - this.state.data.fulfilledRequestsAmount} fulfilledRequestsAmount={this.state.data.fulfilledRequestsAmount} requestsAmount={this.state.data.requestsAmount}/>\r\n  </Col>\r\n  {this.state.data.videorequests.map(vidReq => {\r\n      return (<Col> <VideoRequest key={vidReq.request_id} requestId={vidReq.request_id} description={vidReq.description} title={vidReq.title} videoId={vidReq.video_id}/></Col>)\r\n  })}\r\n  </Row>\r\n</Container>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ManageProfile;","import React, { Component } from 'react';\r\nimport LoginButton from '../Signin/LoginButton';\r\nimport ManageProfile from '../ManageProfile/ManageProfile';\r\nimport './Home.css'\r\nimport { Jumbotron, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    state = { \r\n        isLoading : false,\r\n        loggedIn : false,\r\n        errorInfo : \"\",\r\n        data : false\r\n     }\r\n\r\n     logIn = (googleUser) => { // login happens checks if user already exists in the database, create a new profile if not\r\n\r\n        this.setState({isLoading : true})\r\n\r\n        const token_id = googleUser.tokenId;\r\n\r\n        fetch(\"https://requstenator-server.herokuapp.com/signin\", {\r\n            method : \"POST\",\r\n            headers : {\r\n              'Content-Type' : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n              token_id : token_id\r\n              \r\n            })\r\n          }).then(res => {\r\n            if (res.status === 200) { // user alredy exists\r\n              res.json().then(data => {\r\n                this.setState({loggedIn : true, data : data})\r\n                window.localStorage.setItem('token_id', token_id)\r\n              })\r\n            }\r\n            else if (res.status === 201) { // new user created\r\n              res.json().then(data => {\r\n                console.log(data)\r\n                this.setState({loggedIn : true, data : data})\r\n                window.localStorage.setItem('token_id', token_id)\r\n              })\r\n            }\r\n            else {\r\n              console.log(\"no bueno status is not 200 ok\")\r\n              this.setState({errorInfo : \"Something went wrong while signin in\"})\r\n            }  \r\n          })\r\n          .catch(er => {\r\n            console.log(er)\r\n            this.setState({errorInfo : \"Couldn't connect to the server\"})\r\n            console.log(\"yo man, there is an error connecting to server\")\r\n          })\r\n          .finally(() => {\r\n            this.setState({isLoading : false})\r\n          })\r\n        \r\n     }\r\n\r\n     logInFailure = () => { // Something went wrong with  google authentication login\r\n        console.log(\"failed to log in\")\r\n        alert(\"failed to login\")\r\n     }\r\n\r\n    render() { \r\n        if (!this.state.loggedIn) {\r\n            return ( \r\n<div clas style={{textAlign:\"center\"}}>\r\n\r\n    <div class=\"jumbotron\">\r\n      <h1 style={{fontSize:\"85px\"}} className=\"display-4\">Vregs</h1>\r\n      <p className=\"lead\">Allows youtubers to get video requests and sell custom video content</p>\r\n      <hr className=\"my-4\" />\r\n      <LoginButton isLoading={this.state.isLoading} logInFailure={this.logInFailure} logIn={this.logIn}/>\r\n    </div>\r\n\r\n  <div className=\"container\">\r\n    <Row>\r\n      <Col >\r\n        <div className=\"jumbotron\" style={{backgroundColor:\"white\"}}>\r\n          <i style={{marginBottom : \"25px\"}} className=\"fas fa-user-plus fa-4x\"></i>\r\n          <h1 classNameName=\"display-4\">1. Sign in</h1>\r\n          <p classNameName=\"lead\">Setup your account by signing in with your youtube/google account</p>\r\n        </div>\r\n      </Col>\r\n      <Col >\r\n        <div className=\"jumbotron\" style={{backgroundColor:\"white\"}}>\r\n          <i style={{marginBottom : \"25px\"}} className=\"fas fa-upload fa-4x\"></i>\r\n          <h1 classNameName=\"display-4\">2. Setup your account</h1>\r\n          <p classNameName=\"lead\">Setup your account and start accepting custom video requests</p>\r\n        </div>\r\n      </Col>\r\n      <Col >\r\n        <div className=\"jumbotron\" style={{backgroundColor:\"white\"}}>\r\n          <i style={{marginBottom : \"25px\"}} className=\"fas fa-dollar-sign fa-4x\"></i>\r\n          <h1 classNameName=\"display-4\">3. Gain revenue</h1>\r\n          <p classNameName=\"lead\">Fullfill custom video requests and gain revenue</p>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n</div>\r\n);\r\n        }\r\n        else if (this.state.loggedIn) {\r\n            return (<div>\r\n                <ManageProfile data={this.state.data}/>\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n \r\n \r\nexport default Home;","/**\r\n* Use the CSS tab above to style your Element's container.\r\n*/\r\nimport React from 'react';\r\nimport {CardElement} from '@stripe/react-stripe-js';\r\nimport './CardSectionStyles.css'\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CardSection;","import React from 'react';\r\nimport {ElementsConsumer, CardElement} from '@stripe/react-stripe-js';\r\n\r\nimport CardSection from './CardSection';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nclass CheckoutForm extends React.Component {\r\n\r\n  state={\r\n\r\n    // form data\r\n    name : \"\",\r\n    email : \"\",\r\n\r\n    payment_intent : false,\r\n    errorMessage : \"\",\r\n    paymentHandled : false,\r\n    loading : false\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    this.setState({loading : true})\r\n\r\n    const {stripe, elements, clientSecret} = this.props\r\n    const { name, email } = this.state\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make  sure to disable form submission until Stripe.js has loaded.\r\n    }\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: name,\r\n          email : email\r\n        },\r\n      }\r\n    });\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      console.log(\"something went wrong with this whole thing\")\r\n      console.log(result.error.message);\r\n      this.setState({paymentHandled : true, errorMessage : \"something went wrong\", loading : false})\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === 'succeeded') {\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n        this.setState({paymentHandled : true, loading : false, payment_intent : result.paymentIntent.id})\r\n        console.log(result.paymentIntent, \"payment intent\")\r\n        console.log(\"payment succeeded\")\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {errorMessage, paymentHandled} = this.state\r\n    if (paymentHandled) {\r\n      if (errorMessage.length > 0) {\r\n        return (<div>\r\n        <p>Something went wrong with payment</p>\r\n        <Button variant=\"danger\" onClick={() => {this.props.togglePaymentScreen()}}>Oops!</Button>\r\n        </div>)\r\n      }\r\n      else {\r\n        return (<div>\r\n          <p>Payment Succeeded!</p>\r\n          <Button variant=\"success\" onClick={() => {this.props.togglePaymentScreen(this.state.payment_intent)}}>Ok!</Button>\r\n        </div>)\r\n      }\r\n    }\r\n    else {\r\n      return (<Form onSubmit={this.handleSubmit}>\r\n      <CardSection />\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control value={this.state.email} onChange={(e) => {this.setState({email : e.currentTarget.value})}} type=\"email\" placeholder=\"Enter email\" />\r\n          <Form.Text className=\"text-muted\">\r\n            Email is used for refunding payments.\r\n          </Form.Text>\r\n        </Form.Group>\r\n      \r\n        <Form.Group controlId=\"formFullName\">\r\n          <Form.Label>Full name</Form.Label>\r\n          <Form.Control value={this.state.name} onChange={(e) => {this.setState({name : e.currentTarget.value})}} type=\"text\" placeholder=\"Full name\" />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default function InjectedCheckoutForm(props) {\r\n  return (\r\n    <ElementsConsumer>\r\n      {({stripe, elements}) => (\r\n        <CheckoutForm  stripe={stripe} elements={elements} clientSecret={props.clientSecret} togglePaymentScreen={props.togglePaymentScreen}/>\r\n      )}\r\n    </ElementsConsumer>\r\n  );\r\n}\r\n\r\n/*      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <CardSection />\r\n\r\n          <p>Full Name :</p><input type=\"text\"/>\r\n          <p>Email :</p><input type=\"text\"/>\r\n          <button disabled={!this.props.stripe}>Confirm order</button>\r\n        </form>\r\n      ); */","// Opens up when user clicks on create videorequest button\r\nimport CheckoutForm from './CheckoutForm'\r\nimport React, { Component } from 'react';\r\n\r\nclass PaymentScreen extends Component {\r\n    state = { \r\n        clientSecret : false\r\n     }\r\n     \r\n    componentDidMount() {\r\n        fetch(\"https://requstenator-server.herokuapp.com/handlepayment\", {\r\n            method : \"POST\",\r\n            headers : {\r\n              'Content-Type' : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n              video_price : this.props.videoPrice.price,\r\n              currency : this.props.videoPrice.currency\r\n              \r\n            })\r\n        }).then(r => {\r\n            r.json().then(d => {\r\n                console.log(d, \"this should contain the clientSecret\")\r\n                this.setState({clientSecret : d.clientSecret})\r\n            })\r\n        })\r\n        .catch(e => {\r\n            console.log(\"something went wrong with handeling payment\")\r\n        })\r\n        \r\n    }\r\n    render() { \r\n        const {clientSecret} = this.state\r\n        if (!clientSecret) {\r\n            return <div>Loading ClientSecret for payments</div>\r\n        }\r\n        return ( <div style={{position : \"fixed\", top:\"0px\", right : \"0%\", left : \"0%\", width:\"100%\", height:\"100%\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}>\r\n        <CheckoutForm clientSecret={clientSecret} togglePaymentScreen={this.props.togglePaymentScreen} requestToBeCreated={this.props.requestToBeCreated} createVideoRequest={this.props.createVideoRequest}/>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default PaymentScreen;","import React, { Component } from 'react';\r\nimport { Card, Button, Spinner } from 'react-bootstrap';\r\nimport PaymentScreen from '../PaymentScreen/PaymentScreen';\r\n\r\nclass CreateRequest extends Component {\r\n    state = { \r\n        requestToBeCreated : {\r\n          title : \"\",\r\n          description : \"\"\r\n        },\r\n        paymentScreen : false,\r\n        loading : false,\r\n        title : \"\",\r\n        description : \"\",\r\n        infoMessage : \"\"\r\n     }\r\n\r\n\r\n     togglePaymentScreen = (payment_intent) => { // toggles payments screen, if input is true then payment was a success\r\n      if (payment_intent) {\r\n        console.log(\"payment was a success, create a new video request\")\r\n        const { requestToBeCreated } = this.state\r\n        this.createVideoRequest(requestToBeCreated.title, requestToBeCreated.description, payment_intent)\r\n      }\r\n      const paymentScreen = this.state.paymentScreen\r\n      this.setState({paymentScreen : !paymentScreen})\r\n    }\r\n\r\n    startPaymentProcess = (title, description) => { // called when create request button is pressed, starts the creating process\r\n      const requestToBeCreated = {\r\n        title, description\r\n      }\r\n      this.setState({requestToBeCreated, paymentScreen : true})\r\n    }\r\n\r\n     createVideoRequest = (title, description, payment_intent) => {\r\n       fetch(\"https://requstenator-server.herokuapp.com/createrequest\", {\r\n         method : \"POST\",\r\n         headers : {\r\n          'Content-Type': 'application/json'\r\n         },\r\n         body : JSON.stringify({\r\n           user_id : this.props.userId,\r\n           title : title,\r\n           description : description,\r\n           payment_id : payment_intent\r\n         })\r\n       }).then(r => {\r\n         if (r.status === 201) {\r\n           console.log(\"created a new video request\")\r\n           this.setState({infoMessage : \"Video requested\"})\r\n           this.props.createVideoRequest(title, description)\r\n           \r\n         }\r\n         else {\r\n           console.log(\"something went wrong with requesting video\")\r\n           this.setState({infoMessage : \"Connection error\"})\r\n         }\r\n       })\r\n     }\r\n\r\n    render() { \r\n        const {title, description} = this.state\r\n        return ( <div>\r\n            <Card style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\"}}>\r\n  <Card.Body>\r\n    <Card.Title><input disabled={this.state.loading} onChange={(e) => {this.setState({title : e.currentTarget.value})}} value={title} type=\"text\" placeholder=\"Title\" maxLength=\"35\"/></Card.Title>\r\n    <Card.Text>\r\n    <textarea disabled={this.state.loading} onChange={(e) => {this.setState({description : e.currentTarget.value})}} value={description} maxLength=\"854\" style={{resize : \"none\"}} rows=\"14.5\" cols=\"40\" placeholder=\"Write a description of the video you want\"/>\r\n    </Card.Text>\r\n    <Button onClick={() => {this.startPaymentProcess(title, description)}} disabled={this.state.loading} variant=\"primary\">{this.state.loading ? <Spinner animation=\"border\" /> : \"Request video\"}</Button>\r\n    <p style={{float:\"right\", color:\"red\"}}>{this.state.errorMessage}</p>\r\n  </Card.Body>\r\n</Card>\r\n {this.state.paymentScreen ? <PaymentScreen videoPrice={{price : this.props.videoPrice.price, currency : this.props.videoPrice.currency}} requestToBeCreated={this.state.requestToBeCreated} togglePaymentScreen={this.togglePaymentScreen} createVideoRequest={this.createVideoRequest}/> : null}\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default CreateRequest;\r\n\r\n//this.createVideoRequest(title, description)}","import React, { Component } from 'react';\r\nimport { Jumbotron, Spinner, Row, Col, Container } from 'react-bootstrap';\r\nimport RequestInfo from '../SharedComponents/RequestsInfo';\r\nimport VideoRequest from '../VideoRequest/VideoRequest';\r\nimport CreateRequest from './CreateRequest';\r\n\r\nclass ViewProfile extends Component {\r\n    state = { \r\n        renderedRequests : [],\r\n        requestPrice : \"Free\",\r\n        totalRequests : 25,\r\n        unfinishedRequests : 0,\r\n        creatingVideoRequest : false,\r\n        data : false,\r\n        userId : \"\",\r\n        loadingData : true,\r\n     }\r\n\r\n     createVideoRequest = (title, description) => { // If video request is added to db, create one locally on the frontend as well with this\r\n       const data = this.state.data\r\n       const vr = {\r\n         title : title,\r\n         description : description,\r\n       }\r\n       data.videoRequests.push(vr)\r\n       this.setState({data : data})\r\n       \r\n       console.log(\"send video request to backend \")\r\n       console.log(title, description)\r\n     }\r\n\r\n     getProfile = (userId) => {\r\n      fetch(`https://requstenator-server.herokuapp.com/getprofile/${userId}`).then(r => {\r\n        if (r.status === 200) {\r\n          r.json().then(data => {\r\n            this.setState({data : data, userId : userId })\r\n          })\r\n        }\r\n        else { // profile not found\r\n          console.log(\"something went wrong\")\r\n          \r\n        }\r\n        this.setState({loadingData : false})\r\n      })\r\n    }\r\n\r\n    youtubeLoaded = () => { // fires once youtube script is loaded\r\n      console.log(\"youtube iframe api loaded\");\r\n      const userId = window.location.hash.slice(1)\r\n      this.getProfile(userId) // after youtube script is loaded load profile\r\n    }\r\n\r\n    loadYoutube = () => { // loads youtube script\r\n\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      window.onYouTubeIframeAPIReady = this.youtubeLoaded; // once youtube video is done loading call loadvideo function\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    }\r\n\r\n    componentDidMount () {   \r\n      this.loadYoutube()\r\n      \r\n    }\r\n\r\n    render() { \r\n        const { loadingData, data } = this.state\r\n        if (loadingData && !data) {\r\n          return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Loading...</h1>\r\n  <p>\r\n    loading info...\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n<div style={{paddingLeft:\"50%\", width:\"100%\"}}><Spinner animation=\"border\" /></div>\r\n            </div>)\r\n        }\r\n        if (!data && !loadingData) {\r\n          return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Not found</h1>\r\n  <p>\r\n    Profile with that name was not found\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n            </div>)\r\n        }\r\n        else {\r\n            const { data } = this.state\r\n            return ( <div>\r\n              <Container fluid>\r\n                <Row>\r\n                <Col>\r\n                <Jumbotron>\r\n                <div style={{color:\"purple\", textAlign:\"center\"}}>\r\n                <h1>{data.userName}</h1>\r\n                <p>\r\n                  give youtube video ideas to {data.userName}\r\n                </p>\r\n                </div>\r\n              </Jumbotron>\r\n              </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col>\r\n                <RequestInfo requestsAmount={data.requestsAmount} unfulfilledRequestsAmount={data.unfilledRequests} videoPrice={{price : data.videoPrice, currency: data.currency}}/>\r\n                </Col>\r\n\r\n                {this.state.data.videoRequests.map(vidReq => {\r\n                    return (<Col> <VideoRequest key={vidReq.request_id} componentRendered={this.componentRendered} viewOnly={true} description={vidReq.description} title={vidReq.title} videoId={vidReq.video_id}/></Col>)\r\n                })}\r\n                <Col>\r\n                <CreateRequest videoPrice={{price : data.videoPrice, currency : data.currency}} createVideoRequest={this.createVideoRequest} userId={this.state.userId}/>\r\n                </Col>\r\n                </Row>\r\n              </Container>\r\n                      </div> );\r\n        }\r\n    }\r\n}\r\n \r\nexport default ViewProfile;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <div>\r\n        Page not found!\r\n    </div> );\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from './Components/Home/Home';\nimport ViewProfile from './Components/ViewProfile/ViewProfile';\nimport NotFound from './Components/NotFound';\n\nfunction App() { // /viewprofile\"\nreturn (<Router basename=\"/video-requester\">\n  <Switch>\n  <Route exact path=\"/\">\n    <Home />\n  </Route>\n  <Route path='/viewprofile'>\n    <ViewProfile />\n  </Route>\n  <Route component={NotFound}/>\n</Switch>\n  </Router>\n)\n\n}\n\nexport default App;\n\n\n/*  return (<Router>\n    <Switch>\n    <Route path={process.env.PUBLIC_URL + '/viewprofile'}>\n      <ViewProfile />\n    </Route>\n    <Route path=\"/\">\n      <Home />\n    </Route>\n  </Switch>\n    </Router>\n  ); */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport App from './App';\n\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\"pk_test_DOEkIFRqbKXBqWg0ykobHYQP00nEaxN5cb\");\n\n\nReactDOM.render(<Elements stripe={stripePromise}><App /></Elements>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}