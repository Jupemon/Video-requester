{"version":3,"sources":["loader.gif","Components/Signin/LoginButton.js","Components/VideoRequest/Youtube.js","Components/VideoRequest/Info.js","Components/VideoRequest/Loading.js","Components/VideoRequest/VideoRequest.js","Components/RequestsInfo.js","Components/ManageProfile/EditProfile.js","Components/ManageProfile/ManageProfile.js","Components/Home/Home.js","Components/ViewProfile/CreateRequest.js","Components/ViewProfile/ViewProfile.js","App.js","index.js"],"names":["module","exports","LoginButton","props","disabled","isLoading","clientId","process","buttonText","onSuccess","googleUser","logIn","onFailure","logInFailure","cookiePolicy","Youtube","state","loadingPlayer","loadVideo","id","player","window","YT","Player","videoId","events","onReady","onPlayerReady","event","target","a","width","console","log","fulfillRequest","this","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","Component","Info","style","height","backgroundColor","position","top","left","Loading","loader","VideoRequest","checkValidUrl","ytlink","match","length","sendData","linkInfo","setState","loading","fetch","method","headers","body","JSON","stringify","token_id","localStorage","getItem","requestId","then","res","status","json","data","catch","er","finally","d","loadVideoUrl","videoUrl","isValid","opacity","transition","requestFulfilled","viewOnly","className","Card","bg","margin","marginTop","right","onChange","e","currentTarget","value","type","Body","Title","title","Text","description","RequestInfo","unfulfilledRequestsAmount","fulfilledRequestsAmount","requestsAmount","requestPrice","EditProfile","Jumbotron","userName","href","location","user_id","ManageProfile","loadingContent","loadingIndex","unfinishedRequests","youtubeLoaded","loadYoutube","parseVideoRequests","videoRequests","map","vr","parse","videorequests","paddingLeft","Spinner","animation","Container","fluid","Row","Col","username","vidReq","key","request_id","video_id","Home","loggedIn","errorInfo","tokenId","setItem","textAlign","color","CreateRequest","infoMessage","createVideoRequest","userId","r","placeholder","maxLength","resize","rows","cols","Button","onClick","variant","float","errorMessage","ViewProfile","renderedRequests","totalRequests","creatingVideoRequest","loadingProfile","profileFound","push","getProfile","hash","slice","unfilledRequests","componentRendered","App","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eeb975cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.9bdf6f25.gif\";","import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\n\r\nconst LoginButton = (props) => { // handles the google login \r\n    return (<GoogleLogin\r\n        disabled={props.isLoading}\r\n        clientId={process.env.REACT_APP_CLIENT_ID}\r\n        buttonText={props.isLoading ? \"Loading...\" : \"Login\"}\r\n        onSuccess={(googleUser) => {props.logIn(googleUser)}}\r\n        onFailure={() => {props.logInFailure()}}\r\n        cookiePolicy={'single_host_origin'}\r\n      />)\r\n}\r\n \r\nexport default LoginButton;","import React, { Component } from 'react';\r\n\r\nclass Youtube extends Component {\r\n    state = { \r\n        loadingPlayer : true\r\n     }\r\n\r\n    componentDidMount() {\r\n\r\n        if (!window.YT) { // if script is not loaded, load it\r\n            console.log(\"Script was loaded\")\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api';\r\n    \r\n            window.onYouTubeIframeAPIReady = this.loadVideo; // once youtube video is done loading call loadvideo function\r\n\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        }\r\n        else { // if script already exists, load video directly\r\n            console.log(\"script alraedy loaded\")\r\n            this.loadVideo();\r\n        }\r\n\r\n    }\r\n\r\n    loadVideo = () => {\r\n    \r\n        const { id } = this.props;\r\n        // the Player object is created uniquely based on the id in props\r\n        this.player = new window.YT.Player(`youtube-player-${id}`, {\r\n          videoId: id,\r\n          events: {\r\n            onReady: this.onPlayerReady\r\n          },\r\n        });\r\n      };\r\n\r\n    onPlayerReady = (event) => {\r\n        event.target.a.width = \"100%\";\r\n        console.log(\"player is ready to play\")\r\n        this.props.fulfillRequest()\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( <div id={`youtube-player-${this.props.id}`} /> );\r\n    }\r\n}\r\n \r\nexport default Youtube;","import React from 'react';\r\n\r\nconst Info = () => {\r\n    return ( <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n        <div style={{position:\"absolute\", top : \"150px\", left:\"100px\"}}>Request not fulfilled</div>\r\n    </div> );\r\n}\r\n \r\nexport default Info;","import { Spinner } from \"react-bootstrap\"\r\nimport React from 'react';\r\nimport loader from '../../loader.gif'\r\n\r\nconst Loading = () => {\r\n    return ( <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n    <img src={loader} width=\"100%\" height=\"100%\"/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Loading;\r\n\r\n\r\n\r\n/*<div className=\"top-content\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner>\r\n\r\n    </div>  */","import React, { Component } from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport Youtube from './Youtube.js'\r\nimport Info from './Info.js';\r\nimport './VideoRequest.css'\r\nimport Loading from './Loading.js';\r\n\r\nclass VideoRequest extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    console.log(\"component mount is happening\")\r\n    this.state = { \r\n      style : {opacity : 0.0, transition : \"1s\"},\r\n      requestFulfilled : false,\r\n      loading : false,\r\n      videoId : \"\",\r\n      linkInfo : \"Insert a youtube video link here\",\r\n     }\r\n\r\n    }\r\n     componentDidMount() { // check if component is view only & check if request already fulfilled\r\n       if (this.props.videoId) {\r\n         this.setState({videoId : this.props.videoId, requestFulfilled : true})\r\n       }\r\n       else {\r\n         this.fulfillRequest()\r\n       }\r\n       \r\n       if (this.props.viewOnly) { // checks if you are fulfilling or viewing video requests\r\n        console.log(\"view only component\")\r\n       }\r\n     }\r\n\r\n     checkValidUrl = (ytlink) => { // checks if youtube link is valid, returns the video id if it is\r\n      var regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\r\n      var match = ytlink.match(regExp);\r\n      if (match && match[2].length === 11) {\r\n      return match[2];\r\n      } else {\r\n      return false\r\n      }\r\n     }\r\n\r\n     sendData = (videoId) => { // Send a post request to backend\r\n      let { linkInfo } = this.state.linkInfo;\r\n      this.setState({loading : true})\r\n      console.log(\"sending request\")\r\n      fetch(\"https://requstenator-server.herokuapp.com/fulfillrequest\", {\r\n        method : \"POST\",\r\n        headers : {\r\n          'Content-Type' : \"application/json\"\r\n        },\r\n        body : JSON.stringify({\r\n          videoId : videoId,\r\n          token_id : window.localStorage.getItem(\"token_id\"),\r\n          requestId : this.props.requestId\r\n          \r\n        })\r\n      }).then(res => {\r\n        if (res.status === 201) { // data was accepted, world peace is achieved\r\n          res.json().then(data => {\r\n            this.fulfillRequest(videoId)\r\n          })\r\n        }\r\n        else {\r\n          console.log(\"something went wrong with the request\")\r\n          linkInfo = \"Something went wrong\"\r\n          \r\n        }\r\n      })\r\n      .catch(er => {\r\n        console.log(er)\r\n        linkInfo = \"Unable to connect to server\"\r\n        \r\n      })\r\n      .finally((d) => {\r\n        this.setState({loading : false, linkInfo})\r\n        console.log(d, \"final data\")\r\n      })\r\n     }\r\n\r\n     loadVideoUrl = (videoUrl) => {  // validate youtube video URL\r\n      const isValid = this.checkValidUrl(videoUrl) // contains false if not valid url, contains the valid url otherwise\r\n      if (isValid) {\r\n        this.sendData(isValid)\r\n        \r\n      }\r\n      else {\r\n        this.setState({linkInfo : \"not valid youtube link\"})\r\n      }\r\n\r\n    }\r\n\r\n    fulfillRequest = (videoId) => { // load youtube video & called dataRequest is ok\r\n      let style = this.state.style\r\n      style = {opacity : 1, transition : \"1s\"}\r\n      if (videoId) {\r\n        this.setState({requestFulfilled : true, videoId : videoId, loading : false, style : style})\r\n      }\r\n      else {\r\n        this.setState({loading : false, style : style})\r\n      }\r\n\r\n\r\n    }\r\n\r\n    render() { \r\n        return ( <div style={this.state.style} className=\"video-request\">\r\n            <Card bg={this.state.requestFulfilled ? \"success\" : \"warning\"} style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\"}}>\r\n            {this.state.loading ? <Loading /> : this.state.requestFulfilled ? <Youtube fulfillRequest={this.fulfillRequest} id={this.state.videoId}/> : this.props.viewOnly? <Info />: <div style={{width:\"350px\", height:\"360px\", backgroundColor:\"#ffc107\"}}>\r\n  <div style={{position:\"absolute\", right:\"80px\", top:\"175px\"}}>\r\n  <div><input style={{width:\"200px\"}} onChange={(e) => {this.loadVideoUrl(e.currentTarget.value)}} type=\"text\"/></div>\r\n  <p>{this.state.linkInfo}</p>\r\n  </div>\r\n  </div>}\r\n\r\n  <Card.Body>\r\n    <Card.Title>{this.props.title}</Card.Title>\r\n    <Card.Text>\r\n      {this.props.description}\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default VideoRequest;","import React, { Component } from 'react';\r\nimport {Tooltip, Button, OverlayTrigger, Card} from 'react-bootstrap';\r\n\r\nfunction renderTooltip(props) {\r\n  if (5===5) {\r\n    console.log(props, \"here you go props you\")\r\n    return <Tooltip >Max amount of requests reached!</Tooltip>\r\n  }\r\n  else if(5==3) {\r\n    return <Tooltip ></Tooltip>\r\n  }\r\n else {\r\n  return <Tooltip>Max amount of requests is 20!</Tooltip>;\r\n }\r\n}\r\n\r\nconst Example = (props) => (\r\n  <OverlayTrigger\r\n    placement=\"right\"\r\n    delay={{ show: 250, hide: 400 }}\r\n    overlay={renderTooltip}\r\n  >\r\n    <Button variant=\"danger\">{props.children}</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RequestInfo extends Component {\r\n    state = {  }\r\n    render() { const {unfulfilledRequestsAmount, fulfilledRequestsAmount, requestsAmount} = this.props\r\n    console.log(unfulfilledRequestsAmount, fulfilledRequestsAmount, requestsAmount, \"WATCH THESE\")\r\n        return ( <div>\r\n            <Card style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\" }}>\r\n  <Card.Body>\r\n    <Card.Title><h1>Video Requests</h1></Card.Title>\r\n    <Card.Text>\r\n      Here is the list of all recent video requests\r\n    </Card.Text>\r\n    <Card.Text>\r\n      The price for a video is : {this.props.requestPrice ? this.props.requestPrice : \"Free\"}\r\n    </Card.Text>\r\n    <div><h2>{unfulfilledRequestsAmount}/{requestsAmount} unfilled video requests</h2></div>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default RequestInfo;\r\n","import React, { Component } from 'react';\r\nimport { Jumbotron, Button, OverlayTrigger, Popover } from 'react-bootstrap';\r\n\r\nclass Username extends Component {\r\n  state = { \r\n    input :  \"\", \r\n    userName : \"\",\r\n    saved : false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({userName : this.props.userName})\r\n  }\r\n  render() { \r\n    return ( <OverlayTrigger onExit={() => {this.setState({input : \"\"})}} trigger=\"click\" placement=\"right\" overlay={<Popover id=\"popover-basic\">\r\n    <Popover.Title as=\"h3\">Rename username</Popover.Title>\r\n        <Popover.Content>\r\n        <input maxLength=\"25\" type=\"text\" value={this.state.input} onChange={(e) => {this.setState({input : e.currentTarget.value})}}/>\r\n        <Button onClick={() => {this.setState({userName : this.state.input})}}>Save</Button>\r\n        </Popover.Content>\r\n      </Popover>}>\r\n        <Button variant=\"success\"><h1>{this.state.input.length <= 0 ? this.state.userName : this.state.input}</h1></Button>\r\n      </OverlayTrigger> );\r\n  }\r\n}\r\n\r\n\r\nclass EditProfile extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <div>\r\n              <Jumbotron>\r\n  <div className=\"headline\">\r\n  {/*<Username userName={this.props.userName} />*/}\r\n  <h1>{this.props.userName}</h1>\r\n  <p>Share this link with your audience! : <a target=\"blank\" href={window.location.href + \"viewprofile#\" + this.props.user_id}>{window.location.href + \"viewprofile#\" + this.props.user_id}</a></p>\r\n  </div>\r\n</Jumbotron>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default EditProfile;","import React, { Component } from 'react';\r\nimport {Button, Container, Col, Row, Jumbotron, Card, Spinner} from 'react-bootstrap/';\r\nimport './ManageProfile.css';\r\nimport VideoRequest from '../VideoRequest/VideoRequest';\r\nimport RequestInfo from '../RequestsInfo';\r\nimport EditProfile from './EditProfile';\r\n\r\nclass ManageProfile extends Component {\r\n    state = {\r\n        loadingContent : true,\r\n        loadingIndex : 0,\r\n        unfinishedRequests : 0,\r\n        data : false\r\n     }\r\n\r\n    youtubeLoaded = () => { // fires once youtube script is loaded\r\n      console.log(\"youtube iframe api loaded\");\r\n\r\n      this.setState({loadingContent : false})\r\n    }\r\n\r\n    loadYoutube = () => { // loads youtube script\r\n\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      window.onYouTubeIframeAPIReady = this.youtubeLoaded; // once youtube video is done loading call loadvideo function\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    }\r\n\r\n    parseVideoRequests = (videoRequests) => {\r\n      return videoRequests.map(vr => {\r\n        return JSON.parse(vr)\r\n      })\r\n    }\r\n\r\n    componentDidMount() { // loads youtube & parse data\r\n        let data = this.props.data\r\n        this.loadYoutube()\r\n        data.videorequests = this.parseVideoRequests(this.props.data.videorequests)\r\n        // data which is gotten from database\r\n        console.log(data, \"parsed data\")\r\n        this.setState({data : data})\r\n    }\r\n\r\n    render() { \r\n        const data = this.state.data\r\n        if (this.state.loadingContent) {\r\n            return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Loading...</h1>\r\n  <p>\r\n    loading info...\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n<div style={{paddingLeft:\"50%\", width:\"100%\"}}><Spinner animation=\"border\" /></div>\r\n            </div>)\r\n        } // Does a get request to get the profile, allows managing the profile\r\n        return ( <div>\r\n<Container fluid>\r\n  <Row>\r\n  <Col>\r\n  <EditProfile userName={data.username} user_id={data.user_id}/>\r\n</Col>\r\n  </Row>\r\n  <Row>\r\n  <Col>\r\n  <RequestInfo unfulfilledRequestsAmount={this.state.data.requestsAmount - this.state.data.fulfilledRequestsAmount} fulfilledRequestsAmount={this.state.data.fulfilledRequestsAmount} requestsAmount={this.state.data.requestsAmount}/>\r\n  </Col>\r\n  {this.state.data.videorequests.map(vidReq => {\r\n      return (<Col> <VideoRequest key={vidReq.request_id} requestId={vidReq.request_id} description={vidReq.description} title={vidReq.title} videoId={vidReq.video_id}/></Col>)\r\n  })}\r\n  </Row>\r\n</Container>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ManageProfile;","import React, { Component } from 'react';\r\nimport LoginButton from '../Signin/LoginButton';\r\nimport ManageProfile from '../ManageProfile/ManageProfile';\r\nimport './Home.css'\r\nimport { Jumbotron, Button, Popover, OverlayTrigger } from 'react-bootstrap';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    state = { \r\n        isLoading : false,\r\n        loggedIn : false,\r\n        errorInfo : \"\",\r\n        data : false\r\n     }\r\n\r\n     logIn = (googleUser) => { // login happens checks if user already exists in the database, create a new profile if not\r\n\r\n        this.setState({isLoading : true})\r\n\r\n        const token_id = googleUser.tokenId;\r\n\r\n        fetch(\"https://requstenator-server.herokuapp.com/signin\", {\r\n            method : \"POST\",\r\n            headers : {\r\n              'Content-Type' : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n              token_id : token_id\r\n              \r\n            })\r\n          }).then(res => {\r\n            if (res.status === 200) { // user alredy exists\r\n              res.json().then(data => {\r\n                this.setState({loggedIn : true, data : data})\r\n                window.localStorage.setItem('token_id', token_id)\r\n              })\r\n            }\r\n            else if (res.status === 201) { // new user created\r\n              res.json().then(data => {\r\n                console.log(data)\r\n                this.setState({loggedIn : true, data : data})\r\n                window.localStorage.setItem('token_id', token_id)\r\n              })\r\n            }\r\n            else {\r\n              console.log(\"no bueno status is not 200 ok\")\r\n              this.setState({errorInfo : \"Something went wrong while signin in\"})\r\n            }  \r\n          })\r\n          .catch(er => {\r\n            console.log(er)\r\n            this.setState({errorInfo : \"Couldn't connect to the server\"})\r\n            console.log(\"yo man, there is an error connecting to server\")\r\n          })\r\n          .finally(() => {\r\n            this.setState({isLoading : false})\r\n          })\r\n        \r\n     }\r\n\r\n     logInFailure = () => { // Something went wrong with  google authentication login\r\n        console.log(\"failed to log in\")\r\n     }\r\n\r\n    render() { \r\n        if (!this.state.loggedIn) {\r\n            return ( <div style={{textAlign : \"center\", marginTop : \"290px\"}}>\r\n              <h1 className=\"intro-headline\">Hey youtuber!</h1>\r\n  <p className=\"intro-text\">\r\n  Create youtube videos based on audience suggestions!\r\n  </p>\r\n                <Jumbotron className=\"intro-slider\">\r\n  <div className=\"intro-slider-content\">\r\n  <p>Sign in with your google account!</p>\r\n  <p>\r\n  <LoginButton isLoading={this.state.isLoading} logInFailure={this.logInFailure} logIn={this.logIn}/>\r\n  </p>\r\n  <p style={{color:\"red\"}}>{this.state.errorInfo}</p>\r\n  </div>\r\n</Jumbotron>\r\n            </div> );\r\n        }\r\n        else if (this.state.loggedIn) {\r\n            return <div>\r\n                <ManageProfile data={this.state.data}/>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n \r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Card, Button, Spinner } from 'react-bootstrap';\r\n\r\nclass CreateRequest extends Component {\r\n    state = { \r\n        loading : false,\r\n        title : \"\",\r\n        description : \"\",\r\n        infoMessage : \"\"\r\n     }\r\n\r\n     createVideoRequest = (title, description) => {\r\n       fetch(\"https://requstenator-server.herokuapp.com/createrequest\", {\r\n         method : \"POST\",\r\n         headers : {\r\n          'Content-Type': 'application/json'\r\n         },\r\n         body : JSON.stringify({\r\n           user_id : this.props.userId,\r\n           title : title,\r\n           description : description\r\n         })\r\n       }).then(r => {\r\n         if (r.status === 201) {\r\n           console.log(\"created a new video request\")\r\n           this.setState({infoMessage : \"Video requested\"})\r\n           this.props.createVideoRequest(title, description)\r\n           \r\n         }\r\n         else {\r\n           console.log(\"something went wrong with requesting video\")\r\n           this.setState({infoMessage : \"Connection error\"})\r\n         }\r\n       })\r\n     }\r\n\r\n    render() { \r\n        const {title, description} = this.state\r\n        return ( <div>\r\n            <Card style={{ width: '22rem', margin : \"auto\", marginTop:\"25px\"}}>\r\n  <Card.Body>\r\n    <Card.Title><input disabled={this.state.loading} onChange={(e) => {this.setState({title : e.currentTarget.value})}} value={title} type=\"text\" placeholder=\"Title\" maxLength=\"35\"/></Card.Title>\r\n    <Card.Text>\r\n    <textarea disabled={this.state.loading} onChange={(e) => {this.setState({description : e.currentTarget.value})}} value={description} maxLength=\"854\" style={{resize : \"none\"}} rows=\"14.5\" cols=\"40\" placeholder=\"Write a description of the video you want\"/>\r\n    </Card.Text>\r\n    <Button onClick={() => {this.createVideoRequest(title, description)}} disabled={this.state.loading} variant=\"primary\">{this.state.loading ? <Spinner animation=\"border\" /> : \"Request video\"}</Button>\r\n    <p style={{float:\"right\", color:\"red\"}}>{this.state.errorMessage}</p>\r\n  </Card.Body>\r\n</Card>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default CreateRequest;","import React, { Component } from 'react';\r\nimport { Jumbotron, Spinner, Row, Col, Container } from 'react-bootstrap';\r\nimport RequestInfo from '../RequestsInfo';\r\nimport VideoRequest from '../VideoRequest/VideoRequest';\r\nimport CreateRequest from './CreateRequest';\r\n\r\nclass ViewProfile extends Component {\r\n    state = { \r\n        renderedRequests : [],\r\n        requestPrice : \"Free\",\r\n        totalRequests : 25,\r\n        unfinishedRequests : 0,\r\n        creatingVideoRequest : false,\r\n        data : false,\r\n        userId : \"\",\r\n        loadingProfile : false,\r\n        profileFound : false\r\n     }\r\n\r\n     createVideoRequest = (title, description) => { // If video request is added to db, create one locally on the frontend as well with this\r\n       const data = this.state.data\r\n       const vr = {\r\n         title : title,\r\n         description : description,\r\n       }\r\n       data.videoRequests.push(vr)\r\n       this.setState({data : data})\r\n       \r\n       console.log(\"send video request to backend \")\r\n       console.log(title, description)\r\n     }\r\n\r\n     getProfile = (userId) => {\r\n       console.log(\"am i happeninig?\")\r\n      fetch(`https://requstenator-server.herokuapp.com/${userId}`).then(r => {\r\n        if (r.status === 200) {\r\n          r.json().then(data => {\r\n            this.setState({data : data, profileFound : true, userId : userId})\r\n          })\r\n        }\r\n        else { // profile not found\r\n          console.log(\"something went wrong\")\r\n        }\r\n      })\r\n    }\r\n\r\n    youtubeLoaded = () => { // fires once youtube script is loaded\r\n      console.log(\"youtube iframe api loaded\");\r\n      const userId = window.location.hash.slice(1)\r\n      this.getProfile(userId) // after youtube script is loaded load profile\r\n    }\r\n\r\n    loadYoutube = () => { // loads youtube script\r\n\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      window.onYouTubeIframeAPIReady = this.youtubeLoaded; // once youtube video is done loading call loadvideo function\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    }\r\n\r\n    componentDidMount () {   \r\n      this.loadYoutube()\r\n      \r\n    }\r\n\r\n    render() { \r\n        const { loadingProfile, data, profileFound } = this.state\r\n        if (loadingProfile) {\r\n          return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Loading...</h1>\r\n  <p>\r\n    loading info...\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n<div style={{paddingLeft:\"50%\", width:\"100%\"}}><Spinner animation=\"border\" /></div>\r\n            </div>)\r\n        }\r\n        else if (!profileFound) {\r\n          return (<div>\r\n            <Jumbotron>\r\n  <div className=\"headline\">\r\n  <h1>Not found</h1>\r\n  <p>\r\n    Profile with that name was not found\r\n  </p>\r\n  </div>\r\n</Jumbotron>\r\n            </div>)\r\n        }\r\n        else {\r\n            const { data } = this.state\r\n            return ( <div>\r\n              <Container fluid>\r\n                <Row>\r\n                <Col>\r\n                <Jumbotron>\r\n                <div className=\"headline\">\r\n                <h1>{data.userName}</h1>\r\n                <p>\r\n                  give youtube video ideas to {data.userName}\r\n                </p>\r\n                </div>\r\n              </Jumbotron>\r\n              </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col>\r\n                <RequestInfo requestsAmount={data.requestsAmount} unfulfilledRequestsAmount={data.unfilledRequests} />\r\n                </Col>\r\n\r\n                {this.state.data.videoRequests.map(vidReq => {\r\n                    return (<Col> <VideoRequest componentRendered={this.componentRendered} viewOnly={true} description={vidReq.description} title={vidReq.title} videoId={vidReq.video_id}/></Col>)\r\n                })}\r\n                <Col>\r\n                <CreateRequest createVideoRequest={this.createVideoRequest} userId={this.state.userId}/>\r\n                </Col>\r\n                </Row>\r\n              </Container>\r\n                      </div> );\r\n        }\r\n    }\r\n}\r\n \r\nexport default ViewProfile;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from './Components/Home/Home';\nimport ViewProfile from './Components/ViewProfile/ViewProfile';;\n\nfunction App() { // /viewprofile\"\nreturn (<Router>\n  <Switch>\n  <Route path={process.env.PUBLIC_URL + '/viewprofile'}>\n    <ViewProfile />\n  </Route>\n  <Route path=\"/\">\n    <Home />\n  </Route>\n</Switch>\n  </Router>\n)\n\n}\n\nexport default App;\n\n\n/*  return (<Router>\n    <Switch>\n    <Route path={process.env.PUBLIC_URL + '/viewprofile'}>\n      <ViewProfile />\n    </Route>\n    <Route path=\"/\">\n      <Home />\n    </Route>\n  </Switch>\n    </Router>\n  ); */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}