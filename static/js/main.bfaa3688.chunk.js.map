{"version":3,"sources":["Components/LoginScreen/LoginButton.js","Components/LoginScreen/LoginScreen.js","Components/Profile/Price.js","Components/Profile/SetupProfile.js","Components/Profile/Profile.js","Components/VideoRequests/Request/Buttons/Accept.js","Components/VideoRequests/Request/Buttons/Reject.js","Components/VideoRequests/Request/Buttons/Buttons.js","Components/VideoRequests/Request/YoutubePlayer.js","Components/VideoRequests/Request/Status.js","Components/VideoRequests/Request/Request.js","Components/VideoRequests/RequestsInfo.js","Components/VideoRequests/VideoRequests.js","Views/ManageProfile.js","Views/NotFound.js","Components/CreateVideoRequest/CreateVideoRequest.js","Views/ViewProfile.js","App.js","index.js"],"names":["LoginButton","props","disabled","isLoading","clientId","process","buttonText","onSuccess","googleUser","logIn","onFailure","logInFailure","cookiePolicy","LoginScreen","state","errorMessage","data","fetchData","a","setState","token_id","tokenId","fetch","method","headers","body","JSON","stringify","response","status","json","parsedData","window","localStorage","setItem","loadProfile","this","console","log","className","Container","Jumbotron","style","fontSize","color","Row","Col","marginBottom","Component","Price","video_price","currency","SetupProfile","onboarding_completed","google_consent","Button","href","variant","Profile","profile","channel_name","user_id","getItem","target","Accept","placeHolder","input","loading","file","sendRequest","updatedRequests","updateRequests","handleClick","requestId","FormData","append","onClick","cancel","type","id","onChange","e","files","Reject","error","rejected","Buttons","accepted","undefined","display","YoutubePlayer","loadPlayer","videoId","player","YT","Player","height","width","events","onPlayerReady","Status","toUpperCase","Request","setBackground","video","title","description","requester","request_id","viewOnly","Card","bg","Body","Text","Title","RequestsInfo","pending","fulfilled","uploading","failed","total","VideoRequests","youtubeLoaded","loadYoutubeScripts","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","videoRequests","requests","map","vr","key","ManageProfile","updatedVideorequests","userId","NotFound","CreateVideoRequest","infoMessage","sendVideoRequest","clearInput","checkoutSessionId","Stripe","redirectToCheckout","sessionId","validateInput","length","requestBody","Number","parseInt","videoPrice","InputGroup","Append","placeholder","value","maxLength","Prepend","Spinner","animation","role","ViewProfile","getUserId","location","split","fetchVideoRequests","App","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bfaa3688.chunk.js","sourcesContent":["import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\n\r\nconst LoginButton = (props) => { // handles the google login \r\n    return (<GoogleLogin\r\n        disabled={props.isLoading}\r\n        clientId={process.env.REACT_APP_CLIENT_ID}\r\n        buttonText={props.isLoading ? \"Loading...\" : \"Login\"}\r\n        onSuccess={(googleUser) => {props.logIn(googleUser)}}\r\n        onFailure={() => {props.logInFailure()}}\r\n        cookiePolicy={'single_host_origin'}\r\n      />)\r\n}\r\n \r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport LoginButton from './LoginButton';\r\n//import ManageProfile from '../ManageProfile/ManageProfile';\r\nimport './LoginScreen.css'\r\nimport { Row, Col, Jumbotron, Container } from 'react-bootstrap';\r\n//import Profile from '../ManageProfile/Profile';\r\n\r\n\r\nclass LoginScreen extends Component {\r\n\r\n  state = { \r\n      isLoading : false,\r\n      errorMessage : \"\",\r\n      data : false // user data gotten from server\r\n    }\r\n\r\n\r\n    fetchData = async ( googleUser )=> { // Send google token_id to be verified on server\r\n\r\n      this.setState({isLoading : true})\r\n\r\n\r\n      const token_id = googleUser.tokenId;\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/signin`, {\r\n        method : \"POST\",\r\n        headers : {\r\n          'Content-Type' : \"application/json\"\r\n\r\n        },\r\n        body : JSON.stringify({\r\n          token_id : token_id\r\n        })\r\n      })\r\n  \r\n      if (response.status === 200 || response.status === 201) {\r\n\r\n        const parsedData = await response.json()\r\n\r\n        window.localStorage.setItem('token_id', token_id) // Used to verify user on some http requests\r\n\r\n        this.props.loadProfile(parsedData)\r\n  \r\n      }\r\n  \r\n      else {\r\n        \r\n        this.setState({errorMessage : \"Couldn't sign in\"})\r\n  \r\n      }\r\n    }\r\n\r\n      \r\n    \r\n    render() {\r\n\r\n      const {errorMessage, isLoading, data} = this.state\r\n      console.log(process.env.REACT_APP_SECRET_NAME, \"TESTING ENV VARIABLE\")\r\n      if (!data) {\r\n        return ( \r\n          <div className=\"Content\">\r\n            <Container>\r\n              <Jumbotron>\r\n                <h1 style={{fontSize:\"85px\"}} className=\"display-4\">Requestnium</h1>\r\n                <p className=\"lead\">Allows youtubers to get video requests and sell custom video content</p>\r\n                <hr className=\"my-4\" />\r\n                <LoginButton isLoading={isLoading} logInFailure={this.logInFailure} logIn={this.fetchData}/>\r\n                <p style={{color:\"red\"}}>{errorMessage}</p>\r\n              </Jumbotron>\r\n\r\n              <Row>\r\n                <Col >\r\n                  <div className=\"box-1\">\r\n                    <i style={{marginBottom : \"25px\"}} className=\"fas fa-user-plus fa-4x\"></i>\r\n                    <h1 className=\"display-4\">1. Sign in</h1>\r\n                    <p className=\"lead\">Setup your account by signing in with your youtube/google account</p>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col>\r\n                <div className=\"box-2\">\r\n                    <i style={{marginBottom : \"25px\"}} className=\"fas fa-upload fa-4x\"></i>\r\n                    <h1 className=\"display-4\">2. Setup your account</h1>\r\n                    <p className=\"lead\">Setup your account and start accepting custom video requests</p>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col >\r\n                <div className=\"box-3\">\r\n                    <i style={{marginBottom : \"25px\"}} className=\"fas fa-dollar-sign fa-4x\"></i>\r\n                    <h1 className=\"display-4\">3. Gain revenue</h1>\r\n                    <p className=\"lead\">Fullfill custom video requests and gain revenue</p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Container>\r\n          </div>\r\n        );\r\n      }\r\n        else if (data) {\r\n            return (<div>\r\n                \r\n            </div>)\r\n        }\r\n    }\r\n}\r\n \r\n \r\nexport default LoginScreen;","import React, { Component } from 'react';\r\n\r\nclass Price extends Component {\r\n    state = {  }\r\n\r\n    \r\n    render() { \r\n\r\n        const {video_price, currency} = this.props\r\n\r\n        return ( \r\n        <div>\r\n            <b>{video_price} {currency}</b> | Edit Price\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Price;","import React, { Component } from 'react';\r\nimport { Button, Jumbotron } from 'react-bootstrap';\r\nimport './SetupProfile.css';\r\n\r\nclass SetupProfile extends Component { // Force user to setup their profile (Stripe onboarding & Google consent) before managing it\r\n    state = {  }\r\n\r\n\r\n    render() { \r\n        const { onboarding_completed, google_consent, token_id } = this.props\r\n        if (!google_consent) {\r\n            return (<div className=\"setup-profile\">\r\n                <Jumbotron>\r\n                <h1>Google consent</h1>\r\n                <p>\r\n                    Click The button to give consent to the application access to your youtube account.\r\n                </p>\r\n                <p>\r\n                    <Button href={`${process.env.REACT_APP_SERVER_URL}/handle-consent/${token_id}`} variant=\"primary\">Google Consent</Button>\r\n                </p>\r\n                </Jumbotron>\r\n    \r\n    \r\n            </div> );\r\n        }\r\n\r\n        else if (!onboarding_completed) {\r\n            return (<div className=\"setup-profile\">\r\n                <Jumbotron>\r\n                <h1>Integrade stripe</h1>\r\n                <p>\r\n                    Follow the instructions given here to create a stripe onboarding account, this will allow you to collect payments from you viewers\r\n                </p>\r\n                <p>\r\n                    <Button  href={`${process.env.REACT_APP_SERVER_URL}/handle-onboarding/${token_id}`}variant=\"primary\">Integrade stripe</Button>\r\n                </p>\r\n                </Jumbotron>\r\n    \r\n    \r\n            </div> );\r\n        }\r\n       else {\r\n           return null\r\n       }\r\n    }\r\n}\r\n \r\nexport default SetupProfile;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, Jumbotron } from 'react-bootstrap';\r\nimport Price from './Price';\r\nimport SetupProfile from './SetupProfile';\r\n\r\n\r\nclass EditPrices extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <input style={{display:\"block\"}} type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"50\"></input>\r\n                <button>Save</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\nclass Profile extends Component {\r\n    state = {  }\r\n    render() {\r\n        \r\n        const {channel_name, user_id, onboarding_completed, google_consent, video_price, currency} = this.props.profile\r\n        \r\n        console.log(\"PROOOOOOPS\", this.props.profile)\r\n\r\n        const token_id = window.localStorage.getItem(\"token_id\")\r\n        return (\r\n        <div>\r\n        <SetupProfile onboarding_completed={onboarding_completed} google_consent={google_consent} token_id={token_id}/>\r\n        <Jumbotron>\r\n            <h1>Hello, {channel_name}</h1>\r\n            <hr/>\r\n            <p>\r\n                People can now request custom youtube videos from you using this shareable <a target=\"blank\" href={`http://localhost:3000/viewprofile/${user_id}`}>link</a>\r\n            </p>\r\n             {<p>\r\n                the price for leaving a custom video request is currently : <Price video_price={video_price} currency={currency}/>\r\n            </p>}\r\n            {/*<p>\r\n                the price for leaving a custom video request is currently : <b>{video_price} {currency}</b> | Edit Price\r\n            </p>*/}\r\n        </Jumbotron>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass Accept extends Component {\r\n    state = { \r\n        placeHolder : \"Enter a youtube URL\",\r\n        input : \"\",\r\n        loading : false,\r\n        file : \"\"\r\n     }\r\n    \r\n    sendRequest = async (data) => {\r\n\r\n        this.setState({ loading : true })\r\n        \r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/fulfillvideorequest`, {\r\n            method : \"POST\",\r\n            body : data\r\n        })\r\n\r\n        if (response.status === 200) {\r\n\r\n            // Call updaterequests with the updated requests\r\n            const updatedRequests = await response.json()\r\n\r\n            this.setState({loading : false})\r\n\r\n            this.props.updateRequests(updatedRequests)\r\n        }\r\n\r\n        else {\r\n            this.setState({input : \"\", placeHolder : \"Something went wrong\", loading: false})\r\n        }\r\n    }\r\n\r\n\r\n    handleClick = () => { // called by fulfill button, validate input & send fetch request\r\n\r\n        const { requestId } = this.props\r\n        const token_id =  window.localStorage.getItem('token_id')\r\n        //const input = this.state.input\r\n        const data = new FormData()\r\n\r\n        data.append('video', this.state.file)\r\n        data.append('name', \"JOHNSON\")\r\n        data.append('requestId', requestId)\r\n        data.append('token_id', token_id)\r\n\r\n        this.sendRequest(data)\r\n\r\n    }\r\n\r\n    render() { \r\n        const {input, placeHolder, loading} = this.state\r\n\r\n\r\n        if (loading) {\r\n            return <div>\r\n                <Button disabled={true}>Loading...</Button>\r\n            </div>\r\n        }\r\n\r\n        else {\r\n            return (<div >\r\n                <Button disabled={loading} onClick={() => {this.props.cancel()}} variant=\"danger\">Cancel</Button>\r\n                <Button disabled={loading} variant=\"success\" onClick={() => {this.handleClick()}}>Fulfill</Button>\r\n                <input disabled={loading} type=\"file\" id=\"video\" onChange={(e) => {this.setState({file : e.target.files[0]})}}/>\r\n            </div>);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n \r\nexport default Accept;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nclass Reject extends Component {\r\n    state = { \r\n        error : \"\",\r\n        loading : false,\r\n        rejected : false,\r\n     }\r\n\r\n    fetchData = async (token_id, requestId) => { // Set videorequest status to rejected, update videorequests\r\n\r\n        this.setState({ loading: true })\r\n\r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/rejectvideorequest`, {\r\n            method : \"POST\",\r\n            headers : {\r\n            'Content-Type' : \"application/json\"\r\n            },\r\n            body : JSON.stringify({\r\n            token_id : token_id,\r\n            requestId : requestId\r\n            })\r\n        })\r\n\r\n        if (response.status===200) {\r\n\r\n            this.setState({ loading: false })\r\n\r\n            const updatedRequests = await response.json()\r\n\r\n            this.props.updateRequests(updatedRequests)\r\n        }\r\n\r\n        else {\r\n            this.setState({ loading: false, error : \"Failed to update\" })\r\n        }\r\n\r\n    }\r\n\r\n    handleClick = () => {\r\n        const token_id = window.localStorage.getItem('token_id')\r\n        const { requestId } = this.props\r\n        this.fetchData(token_id, requestId)\r\n    }\r\n\r\n    render() { \r\n\r\n        const {loading, rejected} = this.state\r\n        \r\n        if (loading) {\r\n            return (\r\n                <Button disabled={true} variant=\"warning\">Loading</Button>\r\n            )\r\n        }\r\n        \r\n        if (rejected) {\r\n            return (\r\n                <div>Rejected</div>\r\n            )\r\n        }\r\n\r\n        else {\r\n            return (<div>\r\n                <div>Are you sure?</div>\r\n                <Button onClick={() => {this.handleClick()}} variant=\"success\">Yes</Button>\r\n                <Button onClick={() => {this.props.cancel()}} variant=\"danger\">Cancel</Button>\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Reject;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Accept from './Accept';\r\nimport Reject from './Reject';\r\n\r\nclass Buttons extends Component {\r\n    state = { \r\n        accepted : undefined\r\n     }\r\n\r\n    cancel = () => { // Called by Accepted component, sets accepted to undefined\r\n\r\n        this.setState({accepted : undefined})\r\n    }\r\n\r\n    render() { \r\n        \r\n        const { accepted } = this.state\r\n        \r\n        if (accepted === true) {\r\n            return <Accept updateRequests={this.props.updateRequests} cancel={this.cancel} requestId={this.props.requestId}/>\r\n        }\r\n\r\n        else if (accepted === false) {\r\n            return <Reject updateRequests={this.props.updateRequests} cancel={this.cancel} requestId={this.props.requestId}/>\r\n        }\r\n\r\n        else {\r\n            return ( <div style={{display:\"flex\"}}>\r\n            <Button onClick={() => {this.setState({accepted : false})}} variant=\"danger\">Reject</Button>\r\n            <Button onClick={() => {this.setState({accepted : true})}} variant=\"success\">Accept</Button>\r\n            </div> );\r\n        }\r\n       \r\n    }\r\n}\r\n \r\nexport default Buttons;","import React, { Component } from 'react';\r\n\r\n\r\nclass YoutubePlayer extends Component {\r\n    state = { \r\n\r\n     }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadPlayer()\r\n    }\r\n\r\n    player // Youtube Player here\r\n\r\n    loadPlayer = () => { // Called after required youtube scripts have been loaded\r\n        \r\n        this.setState({loading : false})\r\n\r\n        const { videoId, requestId } = this.props\r\n        \r\n        this.player = new window.YT.Player(`youtube-player-${requestId}`, {\r\n            height: '390',\r\n            width: '390',\r\n            videoId: videoId,\r\n            events: {\r\n                'onReady': this.onPlayerReady,\r\n            }\r\n          });\r\n    }\r\n\r\n    render() {\r\n\r\n            return (<div>\r\n                <div id={`youtube-player-${this.props.requestId}`}/>\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n \r\nexport default YoutubePlayer;","import React from 'react';\r\n\r\nconst Status = (props) => {\r\n    const { status } = props\r\n    return ( <div className=\"status\">{status.toUpperCase()}</div> );\r\n}\r\n \r\nexport default Status;","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Request.css'\r\nimport Buttons from './Buttons/Buttons';\r\nimport YoutubePlayer from './YoutubePlayer';\r\nimport Status from './Status';\r\n\r\nclass Request extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const { status, video } = this.props.data\r\n\r\n        this.state = { \r\n            status : status,\r\n            videoId : video\r\n         }\r\n    }\r\n\r\n    setBackground = (status) => { // return the corresponding background color, based on request status\r\n\r\n        if (status === \"pending\") {\r\n            return \"warning\"\r\n        }\r\n\r\n        if (status === \"rejected\") {\r\n            return \"danger\"\r\n        }\r\n\r\n        if (status === \"fulfilled\") {\r\n            return \"success\"\r\n        }\r\n        \r\n        if (status === \"uploading\") {\r\n            return \"info\"\r\n        }\r\n\r\n        if (status === \"failed\") {\r\n            return \"dark\"\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        const {title, description, requester, request_id } = this.props.data\r\n\r\n        const { viewOnly } = this.props\r\n\r\n        const { status, videoId } = this.state\r\n        \r\n        return (\r\n        <Card bg={this.setBackground(status)}>\r\n            <Card.Body>\r\n                {videoId ? <YoutubePlayer requestId={request_id} videoId={videoId}/> : <Status status={status}/>}\r\n                <Card.Text>FROM : {requester}</Card.Text>\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text>{description}</Card.Text>\r\n                {viewOnly || status !== \"pending\" ? null : <Buttons updateRequests={this.props.updateRequests} requestId={request_id}/>}\r\n            </Card.Body>\r\n        </Card> );\r\n\r\n        \r\n    }\r\n}\r\n \r\nexport default Request;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst RequestsInfo = (props) => { // Renders info about videorequests\r\n\r\n    const maxAmount = 10 // Max amount of videorequests\r\n\r\n    const {pending, fulfilled, rejected, uploading, failed, total} = props.status\r\n\r\n    return (\r\n        <Card style={{ width: '25rem' }}>\r\n            <Card.Body>\r\n            <Card.Title>{\"Videorequests\"}</Card.Title>\r\n            <Card.Text>{`TOTAL ${total} / ${maxAmount}`}</Card.Text>\r\n            <Card.Text>{`PENDING ${pending}`}</Card.Text>\r\n            <Card.Text>{`FULFILLED ${fulfilled}`}</Card.Text>\r\n            <Card.Text>{`REJECTED ${rejected}`}</Card.Text>\r\n            <Card.Text>{`UPLOADING ${uploading}`}</Card.Text>\r\n            <Card.Text>{`FAILED ${failed}`}</Card.Text>\r\n            </Card.Body>\r\n        </Card> );\r\n}\r\n \r\nexport default RequestsInfo;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Request from './Request/Request';\r\nimport RequestsInfo from './RequestsInfo';\r\n\r\nclass VideoRequests extends Component { // Renders videorequests passed as props\r\n\r\n    state = { \r\n        errorMessage : \"\",\r\n        youtubeLoaded : false\r\n    }\r\n\r\n    youtubeLoaded = () => { // Youtube I frame can now be used\r\n\r\n        this.setState({youtubeLoaded : true})\r\n    }\r\n\r\n    loadYoutubeScripts = () => { // Load scripts needed to use youtube iframe\r\n\r\n        var tag = document.createElement('script');\r\n\r\n        tag.src = \"https://www.youtube.com/iframe_api\";\r\n\r\n        var firstScriptTag = document.getElementsByTagName('script')[0];\r\n\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n        window.onYouTubeIframeAPIReady = this.youtubeLoaded// Called after scripts have been loaded\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.loadYoutubeScripts()\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        const { viewOnly, videoRequests } = this.props\r\n\r\n        const { requests, status } = videoRequests;\r\n        \r\n        console.log(videoRequests, \"THESE\")\r\n        const { youtubeLoaded } = this.state\r\n        \r\n        if (youtubeLoaded) {\r\n            return (\r\n                <Row>\r\n                <Col>\r\n                    <RequestsInfo status={status}/>\r\n                </Col>\r\n                    \r\n                    {requests.map(vr => {\r\n                        return <Col key={vr.request_id} style={{marginBottom : \"20px\"}}><Request updateRequests={this.props.updateRequests} viewOnly={viewOnly} data={vr}/></Col>\r\n                    })}\r\n                </Row> \r\n            );\r\n        }\r\n\r\n        else {\r\n            return <div>Loading</div>\r\n        }\r\n      \r\n\r\n\r\n    }\r\n}\r\n \r\nexport default VideoRequests;\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport LoginScreen from '../Components/LoginScreen/LoginScreen';\r\nimport Profile from '../Components/Profile/Profile';\r\nimport SetupProfile from '../Components/Profile/SetupProfile';\r\nimport VideoRequests from '../Components/VideoRequests/VideoRequests';\r\n\r\nclass ManageProfile extends Component {\r\n\r\n    state = {\r\n        profile : false\r\n    }\r\n\r\n    loadProfile = (profile) => { // Called once user signs in, loads the profile\r\n\r\n        this.setState({ profile })\r\n    }\r\n\r\n    updateRequests = (updatedVideorequests) => { // Re renders updated videorequests\r\n\r\n        const { profile } = this.state\r\n\r\n        profile.videoRequests = updatedVideorequests\r\n\r\n        this.setState({ profile })\r\n    }\r\n\r\n    render() { \r\n\r\n        const { profile } = this.state\r\n        \r\n        const { videoRequests, user_id } = profile\r\n\r\n        if (profile) { // Load the user profile\r\n\r\n            return ( \r\n            <Container>\r\n                <Profile profile={profile}/>\r\n                <VideoRequests updateRequests={this.updateRequests} videoRequests={videoRequests} userId={user_id}/>\r\n            </Container> \r\n            );\r\n        }\r\n\r\n        else { // User needs to sign in\r\n            return ( \r\n            <Container>\r\n                <LoginScreen loadProfile={this.loadProfile}/>\r\n            </Container>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n \r\nexport default ManageProfile","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <div>\r\n        Page Not found\r\n    </div> );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Jumbotron, Row, Col, Button, InputGroup, Spinner } from 'react-bootstrap';\r\n\r\nclass CreateVideoRequest extends Component {\r\n\r\n    state = { \r\n        infoMessage : \"\",\r\n        loading : false,\r\n\r\n        requester : \"\",\r\n        title : \"\",\r\n        description : \"\"\r\n        \r\n    }\r\n\r\n    sendVideoRequest = async (body) => { // Sends and creates a videorequest on the DB\r\n\r\n        try {\r\n            \r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/handle-checkout`, {\r\n                method : \"POST\",\r\n                headers : {\r\n                  'Content-Type' : \"application/json\"\r\n                },\r\n                body : JSON.stringify(body)\r\n            })\r\n    \r\n            this.clearInput()\r\n            let checkoutSessionId\r\n\r\n            if (response.status === 201) { // New videorequest was created\r\n                \r\n                const updatedRequests = await response.json()\r\n\r\n                this.setState({loading : false, infoMessage : \"New videorequest added\"})\r\n                \r\n                this.props.updateRequests(updatedRequests)\r\n\r\n                \r\n\r\n            }\r\n\r\n            else if (response.status === 200) { // Send user to payment screen\r\n                checkoutSessionId = await response.json()\r\n    \r\n                const stripe = window.Stripe(process.env.REACT_APP_PUBLIC_KEY)\r\n        \r\n                stripe.redirectToCheckout({\r\n    \r\n                    // Make the id field from the Checkout Session creation API response\r\n                    // available to this file, so you can provide it as argument here\r\n                    // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\r\n                    sessionId: checkoutSessionId\r\n                  })\r\n                  // If `redirectToCheckout` fails due to a browser or network\r\n                  // error, display the localized error message to your customer\r\n                  // using `error.message`.\r\n            }\r\n\r\n\r\n            else {\r\n                throw \"Fetch failed\"\r\n            }\r\n\r\n\r\n        }\r\n\r\n        catch (er){\r\n            console.log(er, \"ERROR HERE\")\r\n            this.setState({loading : false, infoMessage : \"Something went wrong\"})\r\n        }\r\n      \r\n    }\r\n\r\n    clearInput = () => { // Clear user input\r\n        this.setState({\r\n            requester : \"\",\r\n            title : \"\",\r\n            description : \"\"\r\n        })\r\n    }\r\n\r\n    validateInput = () => { // Validate user input, returns boolean\r\n\r\n        const { title, description } = this.state\r\n\r\n        if (title.length > 0 && description.length > 0) {\r\n\r\n            return true\r\n        }\r\n\r\n\r\n        else {\r\n\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n\r\n        const { userId } = this.props\r\n\r\n        const { title, description, requester } = this.state\r\n\r\n        const validInput = this.validateInput()\r\n\r\n        if (validInput) {\r\n\r\n            const requestBody = {\r\n                requester : requester,\r\n                title : title,\r\n                description : description,\r\n                user_id : Number.parseInt(userId),\r\n            }\r\n\r\n            this.setState({loading : true})\r\n\r\n            this.sendVideoRequest(requestBody)\r\n        }\r\n\r\n        else {\r\n\r\n            this.setState({infoMessage : \"Invalid input\"})\r\n        }\r\n        \r\n    }\r\n    \r\n    render() { \r\n        const { videoPrice, currency } = this.props\r\n        const { loading, title, description, requester, infoMessage } = this.state\r\n\r\n        return(\r\n            <Jumbotron>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>Request a custom video :</h1>\r\n                        <p>You can support <b>Jupemon</b> by requesting a custom youtube video from him for <b>{videoPrice} {currency}</b></p>\r\n                    </Col>\r\n        \r\n                    <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text id=\"basic-addon2\">Requester</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                        <input \r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name/username\"\r\n                        disabled={loading}\r\n                        onChange={(e) => {this.setState({requester : e.target.value})}}\r\n                        value={requester}\r\n                        maxLength=\"25\"\r\n                        />\r\n                    </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n\r\n                            <InputGroup.Append>\r\n                                <InputGroup.Text id=\"basic-addon2\">Title</InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                            <input \r\n                            type=\"text\"\r\n                            placeholder=\"Title for your request\"\r\n                            disabled={loading}\r\n                            onChange={(e) => {this.setState({title : e.target.value})}}\r\n                            value={title}\r\n                            maxLength=\"25\"\r\n                            />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>Description</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <textarea \r\n                            placeholder=\"Describe the custom video you would like..\"\r\n                            type=\"textarea\"\r\n                            disabled={loading}\r\n                            onChange={(e) => {this.setState({description : e.target.value})}}\r\n                            value={description}\r\n                            maxLength=\"250\"\r\n                            />\r\n                        </InputGroup>\r\n\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            \r\n                            <Button onClick={() => {this.handleClick()}} disabled={loading} variant=\"outline-secondary\">\r\n                            {loading ? \r\n                            <Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\r\n                            \"Request\"\r\n                            }\r\n                            </Button>\r\n                            <p>{infoMessage}</p>\r\n                            </InputGroup.Prepend>\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Jumbotron>\r\n        ) \r\n\r\n    }\r\n}\r\n \r\nexport default CreateVideoRequest;","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport CreateVideoRequest from '../Components/CreateVideoRequest/CreateVideoRequest';\r\nimport VideoRequests from '../Components/VideoRequests/VideoRequests';\r\n\r\n\r\nclass ViewProfile extends Component {\r\n\r\n    state = { \r\n        loading : true,\r\n        videoRequests : false,\r\n        errorMessage : \"\"\r\n     }\r\n\r\n\r\n    getUserId = (location) => { // returns userID from href\r\n\r\n        return location.split('viewprofile/')[1]\r\n    }\r\n\r\n    fetchVideoRequests = async (user_id) => { // Fetch all videorequests with a certain user id\r\n\r\n        try {\r\n            \r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL}/videorequests/${user_id}`)\r\n\r\n            if (response.status === 200) {\r\n\r\n                const videoRequests = await response.json()\r\n\r\n                this.setState({ videoRequests, loading : false })\r\n            }\r\n    \r\n            else {\r\n\r\n                this.setState({error : true, errorMessage : \"Profile doesn't exist\", loading : false})\r\n            }\r\n        }\r\n        \r\n        catch {\r\n\r\n            this.setState({error : true, errorMessage : \"Could not get profile\", loading : false})\r\n        }\r\n    }\r\n\r\n    updateRequests = (updatedVideorequests) => { // Re renders updated videorequests\r\n\r\n        this.setState({videoRequests : updatedVideorequests})\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const userId = this.getUserId(window.location.href)\r\n\r\n        this.fetchVideoRequests(userId)\r\n    }\r\n\r\n\r\n    render() { \r\n        \r\n        const userId = this.getUserId(window.location.href)\r\n        \r\n        const { videoRequests, loading, errorMessage } = this.state\r\n\r\n        if (loading) { // Loading\r\n            return <div>Loading</div>\r\n        }\r\n        \r\n        if (videoRequests) { // Render videorequests\r\n            const {videoPrice, currency} = videoRequests\r\n            return (\r\n                <Container>\r\n                    <CreateVideoRequest updateRequests={this.updateRequests} userId={userId} currency={currency} videoPrice={videoPrice}/>\r\n                        <VideoRequests updateRequests={this.updateRequests} viewOnly videoRequests={videoRequests}/>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n        else { // Show error\r\n            \r\n            return <div>{errorMessage}</div>\r\n\r\n        }\r\n\r\n    }\r\n}\r\n \r\nexport default ViewProfile;","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport ManageProfile from './Views/ManageProfile';\nimport NotFound from './Views/NotFound';\nimport ViewProfile from './Views/ViewProfile';\n\n\nfunction App() {\n  return (\n  <Router basename=\"/video-requester\">\n    <Switch>\n    \n      <Route exact path=\"/\">\n        <ManageProfile/>\n      </Route>\n\n      <Route path='/viewprofile'>\n        <ViewProfile />\n      </Route>\n\n      <Route component={NotFound}/>\n\n    </Switch>\n  </Router>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}